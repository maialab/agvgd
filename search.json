[{"path":"https://maialab.org/agvgd/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Ramiro Magno Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://maialab.org/agvgd/articles/lee2010.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Missense Variations in the BRCT Domain of BRCA1","text":"One greatest challenges study cancer risk assessment unclassified missense variants. Besides using biochemical cell-based transcriptional assays assess structural functional defects associated missense variants, one can also use bioinformatics analysis based multiple sequence alignment data protein structure prediction approach problem. Align-GVGD one method uses protein multiple sequence alignment (PMSA) data provide cancer risk estimates. vignette show can use agvgd reproduce results obtained Lee et al. (2010)1 study missense variations BRCT Domain BRCA1 gene. Lee’s paper, Align-GVGD prediction scores part cross-validation structural functional assays, indicated column labeled AG Figure 3 said paper.","code":""},{"path":[]},{"path":"https://maialab.org/agvgd/articles/lee2010.html","id":"data-sets","dir":"Articles","previous_headings":"Reproducing the AGVGD scores","what":"Data sets","title":"Missense Variations in the BRCT Domain of BRCA1","text":"reproduce AGVGD prediction scores, need two data sets: protein sequence alignment BRCA1 included BRCT Domain list 117 BRCA1 missense variants studied1 data sets already bundled agvgd. read alignment BRCA1 use function read_alignment() name gene \"BRCA1\": read 117 BRCA1 missense variants, .e., 117 substitutions, use function read_substitutions(): list missense variants comes indication residue number protein sequence, .e. column res missense_variants. ’ll see next, function agvgd() uses alignment positions (column poi missense_variants) instead refer positions alignment. difference res poi res counts residues protein primary sequence reference, poi refers positions alignment, accounting gaps. , proceed, update missense_variants tibble replace NA values corresponding poi values. use function res_to_poi():","code":"brca1_alignment <- read_alignment(\"BRCA1\") print(brca1_alignment, line_width = 200) #> B1_Hsap_NP_009225    1 MDLSALRVEEVQNVINAMQKILECPICLELIKEPVSTKCDHIFCKFCMLKLLN-QKKGPSQCPLCKNDITKRSLQESTRFSQLVEELLKIICAFQLDTGLEYANSYNFAKKENN--SPEHL--KDEVSIIQSMGYRNRAKRLLQSEP--ENPSLQETSLSVQLSNLGTV-RTLRTKQRIQPQKTS--VYIELGSDSSE-D #> B1_Ptro_AAG43492     1 MDLSALRVEEVQNVINAMQKILECPICLELIKEPVSTKCDHIFCKFCMLKLLN-QKKGPSQCPLCKNDITKRSLQESTRFSQLVEELLKIICAFQLDTGLEYANSYNFAKKENN--SPEHL--KDEVSIIQSMGYRNRAKRLLQSEP--ENPSLQETSLSVQLSNLGTV-RTLRTKQRIQPQKKS--VYIELGSDSSE-D #> B1_Ggor_AAT44835     1 MDLSALRVEEVQNVINAMQKILECPICLELIKEPVSTKCDHIFCKFCMLKLLN-QKKGPSQCPLCKNDITKRSLQESTRFSQLVEELLKIICAFQLDTGLEYANSYNFAKKENN--SPEHL--KDEVSIIQSTGYRSRAKRLLQSEP--ENPSLQETGLSVQVSNLGTV-RTLRTKQRIQPQKKS--VYIELGSDSSE-D #> B1_Ppyg_AAT44834     1 MDLSAVRVEEVQNVINAMQKILECPICLELIKEPVSTKCDHIFCKFCMLKLLN-QKKGPSQCPLCKNDITKRSLQESTRFSQLVEELLKIICAFQLDTGLQYANSYNFAKKENN--SPEHL--KDEVSIIQSMGYRNRAKRLLQSEP--ENPSLQETSPSVQLSNLGTV-RTLRTKQRIQPQKKS--VYIELGSDSSE-D #> B1_Mmul_AAT44833     1 MDLSAVRVEEVQNVINAMQKILECPICLELIKEPVSTKCDHIFCRFCMLKLLN-QKKGPSQCPLCKNDITKRSLQESTRFSQLVEELLKIIHAFQLDTGLQFANSYNFAKKENH--SPEHL--KDEVSIIQSMGYRNRAKRLLQSEP--ENPSLQETSLSVPLSNLGIV-RTLRTKQQIQPQKKS--VYIELGSDSSE-D #> B1_Mmus_AAD00168     1 MDLSAVQIQEVQNVLHAMQKILECPICLELIKEPVSTKCDHIFCKFCMLKLLN-QKKGPSQCPLCKNEITKRSLQGSTRFSQLAEELLRIMAAFELDTGMQLTNGFSFSKKRNN--SCERL--NEEASIIQSVGYRNRVRRLPQVEP--GNATLKD-SLGVQLSNLGIV-RSVKKNRQTQPRKKS--VYIELDSDSSE-E #> B1_Cfam_AAC48663     1 MDLSADRVEEVQNVLNAMQKILECPICLELIKEPVSTKCDHIFCKFCMLKLLN-QRKGPSQCPLCKNDITKRSLQESTRFSQLVEELLKIIHAFELDTGLQFADSYNFSKKENN--SPEHL--KEEVSIIQSMGYRNRAKRLRQSEP--ENPTL-ETSLSVQLSNLGIV-RSLRTKQQIQPQNKS--VYIELGSDSSE-D #> B1_Btau_NP_848668    1 MDLSADHVEEVQNVLNAMQKILECPICLELIKEPVSTKCDHIFCKFCMLKLLN-QKKGPSQCPLCKNDITKRSLQESTRFSQLVEELLKIIHAFELDTGLQFANSYNFSRKEDN--SPEHL--KEEVSIIQSMGYRNRAKRLWQSEP--ENPTLQETSLTVELSNLGIV-RSLRTKQQTQSQNKS--VYIELGSDSSE-D #> B1_Mdom_temp1.pep    1 MDLPTVTIEEVKNVLIGMQKILECPICLELIKEPVSTTCDHIFCRFCMLKLLS-KKKGPSQCPLCKNNITKRSLRESTRFNQLVEGLLKTIRAFELDTGFQFSNTQDFSKWERR--TPEPL--KKEAATIQSIGYRNRSKRFKASES--ENSTL-ESSLGVQLYDLGIR-KGSLRKQKKCIKNNA--VYIKLGSDSSE-D #> B1_Ggal_NP_989500    1 MDLSVIAIGDVQNVLSAMQKNLECPVCLDVIKEPVSTKCDHVFCRFCMFKLLSRKKKGVIQCPLCKTEVTKRSLKENSRFKQLIEGLLEAISAFELDTGVKFLSSRYFPKTSTEVATAELL--GNNSSVIQSKGFRNRKRGAKENRQ--DSCTL-EANVDPQLTDNRVKGSSVRSKKQKCGIEKG--VLIELGTDSSE-E #> B1_Xlav_AAL13037     1 MTCSRMDIEGICSVISVMQKNLECPICLELMKEPVATKCDHIFCKFCMLQLLSKKKKGTVPCPLCKTEVTRRSLQESHRFKLLVEGQLKIIKAFEFDSGYKFFPSQEHTKGLDS--TIEDVLVKEDQSIVHCKGYRNRKKGVFNRKTYEETGML-SVSKAEEQF-AKEVTRLIPCRQK-KPKKEAALIFSNCVPDSSDGD #> B1_Tnig_AAR89523     1 ME--APTATDVKKRISLLWETLQCPICLDLMSEPVSTKCDHQFCRFCMLKLLSNTKQNKANCPVCKSKITKRSLQESPGFQRLVSGLQEIILAYENDTGTNYFTGLS---------------------------------------------------------------------KQAQPPHVA---------------  #>  #> B1_Hsap_NP_009225  201 TVNKATYCSVGDQELLQITPQGTRDEISLDS------AKKAACEFSETDVTNTEHHQPSNNDLNTTEKRAAERHPEKYQGSSVSNLHVEP--CGTNT---HASSLQHENSSLLLTKDRMNVEKAEFCNKSKQPGLARSQHNRWAGSKETCNDRRTPSTE--KKVDLNADPLCERKEWNKQKL-PCSENPRDTEDVPWIT- #> B1_Ptro_AAG43492   201 TVNKATYCSVGDQELLQITPQGTRDEISLDS------AKKAACEFSETDVTNTEHHQPSNNDLNTTEKRATERHPEKYQGSSVSNLHVEP--CGTNT---HASSLQHENSSLLLTKDRMNVEKAEFCNKSKQPGLARSQHNRWAGSKETCNDRRTPSTE--KKVDLNADPLCERKEWNKQKL-PCSENPRDTEDVPWIT- #> B1_Ggor_AAT44835   201 TVNKATYCSVGDQELLQITPQGTRDEISLDS------AKKAACEFSETDVTNTEHHQPSNNDLNTTEKRATERHPEKYQGSSVSNLHVEP--CGTNT---HASSLQHENSSLLLTKDRMNVEKAEFCNKNKQPGLARSQHNRWAGSKETCNDRRTPSTE--KKVDLNADPLCERNEWNKQKL-PCSENPRDTEDVPWIT- #> B1_Ppyg_AAT44834   201 TVNKATYCSVGDQELLQITPQGTSDEISLDS------AKKAACEFSETDVTNTEHHQPSNNDLNTTEKRATERHPEKYQGSSVSNLHVEP--CGTNT---HASSLQHENSSLLLTKDRMNVEKAEFCNKSKQPGLARSQHNRWAGSKETCNDRQTPSTE--KKVDLNADPLCERKEWNKQKL-PCSENPRDTEDVPWIT- #> B1_Mmul_AAT44833   201 TVNKATYCSVGDQELLQITPQGTRDETSLDS------AKKAACEFSEKDITNTEHHQSSNNDLNTTEKHATERHPEKYQGSSVSNLHVEP--CGTNT---HASSLQHENS-LLLTKDRMNVEKAEFCNKSKQPGLARSQHNRWTGSKETCNDRQTPSTE--KKVDLNANALYERKEWNKQKL-PCSENPRDAEDVPWIT- #> B1_Mmus_AAD00168   201 TVTKPGDCSVRDQELLQTAPQEAGDEGKLHS------AEEAACEFSE-GIRNIEHHQCS-DDLNPTENHATERHPEKCQSISISNVCVEP--CGTDA---HASSLQPETSSLLLIEDRMNAEKAEFCNKSKQPGIAVSQQSRWAASKGTCNDRQVPSTG--EKVGPNADSLSDREKWTHPQS-LCPENSGATTDVPWIT- #> B1_Cfam_AAC48663   201 TVNKASSCSVGDDEL-EITSQGARAEASLNP------AKKAACEFS-GDITNIEHHQSSNKDLTTTEKHATKKHPEKYQGISVSNLHVEP--CGTNT---HASSLQHENSSLLLTKHRMNVEKAEICNNSKQPGLARSQQSRWAESKETCNDRQIPSTE--KKVVVNADLLCGRKELNKQKP-PHSDSPRDSQDVPWIT- #> B1_Btau_NP_848668  201 TVNKASYFSVGDHELLEITPQGAKAKTNLNP------AEKAACEFSEKDITNTEHHQLSIKDLITTQKHATETHPEKYQGISVSDFHVEP--CGTDT---HASSLQHENSSLLLTENRLNVEKAEFCNKSKQPVLVKSQQSRWAESKGTCKDRQIPSTE--KKIVLNTDPLYRRKELRKQKP-ACPDSPGDSQDVPWVT- #> B1_Mdom_temp1.pep  201 GVKNAICNSVKDQGLCQTSPKGTR----LKS------KEKAEYEFSERAIKSLQQHQSNTVDVHVINENATEGHSEESRGVSSSDLNMKP--WNTDI---HASSLPPEITSVLTNTVSMNIEKAELCDKSKRPGLARSQQISQDNSKEKCSAGKTSYAE--VPHELNPHHLYERQELEEQPECPKYPRGNPQNCLSGTK- #> B1_Ggal_NP_989500  201 HFILASSTGLEDKEELEEPKSAEKYGSSCNTQPLKLGAKEIILPNVIGETDFLKEALDKKSMLNITEHIKCNQVNTIEGQSSPLNVFDADLLTGQRDGIGNASPLKND-TSFLKNAEEMDVEETQCSHKNQELDLEDSSEGRLDKIKE--KDICVPSVEDVEMCEPMDDSLLEKEPPVEKPLQPKIPHCPTLNEVSTKG- #> B1_Xlav_AAL13037   201 LLNKENGLRNDCSPL-----HYEKEDTQIPEMEEMVESDLAECEFAESAGSNLLGFDG----------------PEGIPEISAETSINAAGNCDFYGRKTEQFPNDHHCSFKQNIADAEQNKRNQHCGNVPFAPMGKSNLDEKETVETDFDNQHNDS------------------------------NPENNDPLGKVTK #> B1_Tnig_AAR89523   201 ------------------------------------------------DIKAQHHNKVSVMDASCAEDDYEEALPK-----SQSSTTAAQDGFARLMGLKDTSPLTTGLDSGLGEAPPTCDKKMYSPTKVENVPLEPA----FIPDEDERSDLQTPSKKKSKK-DLEPDKILDQR-------------------------  #>  #> B1_Hsap_NP_009225  401 -LNSSIQKVNEWFSRSDELLGSDDSHDGESESNAKVADVLDVLNEVDEYSGSS--EKIDLLASDPHEALICKSERVHSKSVESN-IEDKIFGKTYRKKASLPNLSHVTE---NLIIGAFVT--EPQIIQERPLTN----KLKRKRRPTSGLHPEDFIKKADLA-VQKTPEMINQGTNQT---EQNGQVMNITNSGHE--N #> B1_Ptro_AAG43492   401 -LNSSIQKVNEWFSRSDELLGSDDSHDGGSESNAKVADVLDVLNEVDEYSGSS--EKIDLLASDPHEALICKSERVHSKSVESN-TEDKIFGKTYRRKASLPNLSHVTE---NLIIGAFVT--EPQIIQERPLTN----KLKRKRRATSGLHPEDFIKKADLA-VQKTPEMINQGTNQM---EQNGQVMNITNSGHE--N #> B1_Ggor_AAT44835   401 -LNSSIQKVNEWFSRSDELLGSDDSHDGGSESNAKVADVLDVLNEVDEYSGSS--EKIDLLASDPHEALICKSERVHSKSVESN-IEDKIFGKTYRRKASLPSLSHVTE---NLIIGAFVT--EPQIIQERPLTN----KLKRKRRATSGLHPEDFIKKADLA-VQKTPEMINQGTNQM---EQNGQVMNITNSGHE--N #> B1_Ppyg_AAT44834   401 -LNSSIQKVNEWFSRSDELLGSDDSHDGRSESNAKVADVLDVLNEVDEYSGSS--EKIDLLASDPHEALICKSERVHSKSVESN-IEDKIFGKTYRRKASLPNLSHVTE---NLIIGAFVT--EPQIIQERPLTN----KLKRKRRATSGLHPEDFIKKADLA-VQKTPEMINQGTNQM---EQNGQVMNITNSGHE--N #> B1_Mmul_AAT44833   401 -LNSSIQKVNEWFSRSDELLSSDDSHDGGSESNAKVADVLDVLNEVDEYSGSS--EKIDLLASDPHEPLICKSERVHSSSVESN-IKDKIFGKTYRRKANLPNLSHVTE---NLIIGALVT--ESQIMQERPLTN----KLKRKRRTTSGLHPEDFIKKADLA-VQKTPEIINQGTNQM---EQNGQVMNITNSAHE--N #> B1_Mmus_AAD00168   401 -LNSSVEKVNEWFSRTGEMLTSDSASARRHESNAEAAVVLEVSNEVDGGFSSS--RKTDLVTPDPHHTLMCKSGRDFSKPVEDN-ISDKIFGKSYQRKGSRPHLNHVTE-----IIGTFIT--EPQITQEQPFTN----KLKRKR--STSLQPEDFIKKADSAGVQRTPDNINQGTDLM---EPNEQAVSTTSNCQE--N #> B1_Cfam_AAC48663   401 -LNSSIRKVNEWFSRSDEILTSDDSHDRGSELNTEVGGAVEVPNEVGEYSGSS--EKIDLMASDPQDAFICESERVHTKPVGGN-IEDKIFGKTYRRKASLPKVSHTTE---VLTIGACAI--EPQTMQTHPFMN----KAEHKRRTTSSLHPEDFIKKVELGIVPKTPEKLIEGINQI---KRDGHVINITNNGPE--N #> B1_Btau_NP_848668  401 -LNNSIQKVNDWFSRSDEILTSDDSCDGGSESNNEVAGAVEIPNKVDGYSGSS--EKINLMASDPHGTLI--HERVHSKPVESN-IEDKIFGKTYRRKSSLPNFSHIAE---DLILGAFTV--EPQITQEQPLTN----KLKCKRRGTSGLQPEDFIKKVDLTIVPKTPEKMTEGTDQT---EQKCHGMNITSDGHE--N #> B1_Mdom_temp1.pep  401 -LKSSIQKVNDWLSRSNDILVSDYSSVRIHEQNAEMASVLEIGHPDTTDGNSSISGKTDLVADSTDGAWLHMSERSCPRQAENNNIEDKIFGKTYHRKSVHTNLNYVTE---NLIVGAVAS--DCLIPPEHVKQT----RLKRKRKTISDLQPEDFIKKTDTEFTHKSPEKKIHAVDQILEQEQNGQVMNTVNGHLE--Q #> B1_Ggal_NP_989500  401 -LNQSIQKVNEWFSKSSRILSSSSSQNDHAEA-TDASGEGDI-SLSDKDSCIS--EKTNPIVDSVEFAVIERNKR-WTKQTTYS-IEDKIFGKTYERGRKSNPSTILRD-----ILPATK--KEDAAAEEGCLNNSRKDRLKRKRKSACILQPEDFIKKKDLEEADRCPQGIKSSLGDA---EKE--------KCDENSA #> B1_Xlav_AAL13037   401 LMRRSTERVNEWLLKTNQ----DFSTLSAEEDPILDALALQNKETSDKRSCSS--DDSELMPVLHKHAEKGISGGGFDKPA-VG-VKDKIFCKVYKRERKAMPPNNITCVAEVHHDSALETGKENMTLEYGTGMS----HLMSKRKMVYSLNPENTSKKNDLANINGSINVFPDCIS-----DANLELEDKSEADSNSAD #> B1_Tnig_AAR89523   401 -QKKSLEKVAEWLMNVP------------SEQSLEMENPEEDGDDSDSRSSTS--T-IDLGQL--------HRGTNPTRGRAKA-LEDQVFGAVYKRERRGKEMVKPTE--AALEVARFNLSVENTSEDEN----------------RDNKQEEHFIREREK----------NTGSNVL---EGEVEFLEDCRGSLEPTH  #>  #> B1_Hsap_NP_009225  601 KTKGDSIQNEKNPNP---IESLEKESAFKTKAEPISSSISNMELELNIHNSKAPKKNRLRRKS---STRHIHALELVVSRNLSP-----------------------PNCTELQIDSCSSSEEIKK-KKYNQMPVRHSRNLQLMEGKEPATGAKKSNKPNEQTSKRHDSDTFPELKLT----NAPGSFTKCSNTSELKEF #> B1_Ptro_AAG43492   601 KTKGDSIQNEKNPNP---IESLEKESAFKTKAEPISSSISNMELELNIHNSKAPKKNRLRRKS---STRHIHALELVVSRNLSP-----------------------PNCTELQIDSCSSSEEIKK-KKYNQMPVRHSRNLQLMEDKEPATGVKKSNKPNEQTSKRHDSDTFPELKLT----NAPGSFTNCSNTSELKEF #> B1_Ggor_AAT44835   601 KTKGDSIQNEKNPNP---IESLEKESAFKTKAEPISSCISNMELELNIHNSKAPKKNRLRRKS---STRHIHALELVVSRNLSP-----------------------PNCTELQIDSCSSSEEIKK-KKYNQMPVRHSRNLQLMEDKEPATGAKKSNKPNEQTSKRHDSDTFPELKLT----NAPGSFTNCSNTSELKEF #> B1_Ppyg_AAT44834   601 KTKGDSIQNEKNPNP---IESLEKESAFKTKAEPISSSISNMELELNIHNSKAPKKNRLRRKS---STRHIHALELVVSRNLSP-----------------------PNCTELQIDSCSSSEEIKK-KKYNQMPVRHSRNLQLMEDKEPATGAKKSNKPNEQTSKRHDSDTFPELKLT----NAPGSFTNCSNTSELKEF #> B1_Mmul_AAT44833   601 KTKGDSIQNEKNPNA---IESLEEESAFKTKAEPISSSINNMELELNIHNSKAPKKNRLRRKS---STRHIHALELVVSRNLSP-----------------------PNCTELQIDSCSSSEEIKK-KNYNQMPVRHSRNLQLMEDKESATGAKKSNKPNEQTSKRHASDTFPELKLT----KVPGSFTNCSNTSELKEF #> B1_Mmus_AAD00168   601 QIAGSNLQKEKSAHP---TESLRKEPASTAGAKSISNSVSDLEVELNVHSSKAPKKNRLRRKS---SIRCALPLE-PISRNPSP-----------------------PTCAELQIDSCGSSEETKK-NHSNQQPAGHLREPQLIEDTEPAADAKK-NEPNEHIRKRRASDAFPEEKLM----NKAGLLTSCSSPRKSQGP #> B1_Cfam_AAC48663   601 ETEGDYVQKEKNANP---TESLEKESAFRTKTEPMSSRISNMELELNSSSSKAPKKNRLRRKS---SARHTCALEFVVNRNLNP-----------------------PDHSELQIESCSSSEEMKK-QHLDQVPVRHNKTLQLMQDKEPAGRAKKSSKPGEQINKRLASHAFPELTLT----NVSGFFANYSSSSKPQEC #> B1_Btau_NP_848668  601 KTKRDYVQKEQNANP---AESLEKESVFRTEAEPISISISNMELELNIHRSKAPK-NRLKRKS---STRKIPELELVVSRNPSL-----------------------PNHTELPIDSSSSNEEMKK-KHSSQMPVRQSQKLQLIGDKELTAGAK-NNKTYEQINKRLASDAFPELKLT----NTPGYFTNCSS--KPEEF #> B1_Mdom_temp1.pep  601 KALVDGHVEEVNDALASELLPVEKESTFRTGTDSAAGSINHGGLKLNGRNAKMTKKDKLRKKS---SARIVHELELIVDKNPSS-----------------------SNETELQIDSYPSSEEIRKGNNSEQKQIRRSRRLQLLSEE-IAMETKKAYEPDEQAEKSCVNEVFPDLKMG----NIPACDTVSLTTESDQML #> B1_Ggal_NP_989500  601 VKENPLLEKRKGSTL---AEFKERGLQWKNAAEKVSGKCSDGQLELNNSDQKSTKNACSTAKGCRHSTRTRCAIHL-VDRNPGS-----------------------FDLAEPLINSYPSNEEPSK-ADCERRQVRRSRRLQLLSEE-ITKETGKMR----VIKEAKNSDSGPEGSVFGVERNVLVHNSQCKDLRKQQDI #> B1_Xlav_AAL13037   601 ACQSDIVHSSNTQIKQQCVESLANAGETRKKQE-LSCERSQEEKDFT----------------------QSGALGPKTRSQKSP-----------------------YGHSELHIESSQISNE-PS-NVTKQVEVRRSRRLLMLPKG-PGNKSNSNA--VKEMNEQENIAQIPEFRVKDTNKNNEISDTVPSQLKKKDTY #> B1_Tnig_AAR89523   601 MSENDENKEDEVPHP---VSVIEEQQAETKGKRRTRSALQHVDSDLLKCTQKEPENTEPKR------T-QKRSRGIKSERAKSARTSKPLVLVAVENGEGGPKIGPRSEEVQVHIENYPSSGD--Q-EVPSGRSTRKSRRLRGFTKE-DTGKERSRSS----VPEKEHSSKHPKFEC-ETLNNVKSLDY-----------  #>  #> B1_Hsap_NP_009225  801 VNPSLPREEKEEKLETVK---VSNNAEDPKDLMLSGERVLQT-ERSVESSSISLVPGTDYGTQESISLLEVSTLGKAKTEPNKCVSQCAAFENPKGLIHGCSKD----NRNDTEGFKYPLGHEVNHS-RETSIEME---ESELDAQYLQNTFKVSKRQSFAPFSNPGNAEEECATFSAHSGSLKKQSPKVTFECEQKEEN #> B1_Ptro_AAG43492   801 VNPSLPREEEEEKLETVK---VSNNAEDPKDLMLSGERVLQT-ERSVESSSISLVPGTDYGTQESISLLEVSTLGKAKTEPNKCVSQCAAFENPKGLIHGCSKD----TRNDTEGFKYPLGHEVNHS-RETSIEME---ESELDAQYLQNTFKVSKRQSFALFSNPGNPEEECATFSAHCRSLKKQSPKVTFEREQKEQN #> B1_Ggor_AAT44835   801 VNPSLPREEKEEKLETVK---VSNNAEDPKDLMLSGERVLQT-ERSVESSSISLVPGTDYGTQESISLLEVSTLGKAKTEPHKCVSQCAAFENPKGLIHGCSKD----TRNDTEGFKYPLGHEVNHS-RETSIEME---ESELDAQYLQNTFKVSKRQSFALFSNPGNPEEECATFSAHSRSLKKQSPKVTFECEQKEEN #> B1_Ppyg_AAT44834   801 VNPSLPREEKEEKLGTVK---VSNNAKDPKDLMLSGERVLQT-ERSVESSSISLVPGTDYGTQESISLLEVSTLGKAKTEPNKCVSQCAAFENPKELIHGCFKD----TRNDTEGFKYPLGHEVNHS-QETSIEME---ESELDTQYLQNTFKVSKRQSFALFSNPGNPEEECATFSAHSRSLKKQSPKVTFECEQKEEN #> B1_Mmul_AAT44833   801 VNPSLSREEKEEKLETVK---VSNNAKDPKDLMLSGERVLQT-ERSVESSSISLVPDTDYGTQESISLLEVSTLGKAKTERNKCMSQCAAFENPKELIHGCSED----TRNDTEGFKYPLGSEVNHS-QETSIEIE---ESELDTQYLQNTFKVSKRQSFALFSNPGNPEEECATFSAHSRSLKKQSPKVTSECEQKEEN #> B1_Mmus_AAD00168   801 VNPS-PQRTGTEQLETRQ---MSDSAKELGDRVLGGEPSGKTTDRSEESTSVSLVPDTDYDTQNSVSVLDAHTVRYARTGSAQCMTQFVASENPKELVHG-SNN----AGSGTEGLKPPLRHALNLS-QE-KVEME---DSELDTQYLQNTFQVSKRQSFALFSKPRSPQKDCA----HSVPSKELSPKVTAKGKQK-ER #> B1_Cfam_AAC48663   801 INPGLRREEIEESRRMTQ---VSDSTRDPKELVLSGGRGLQT-ERSVESTSISLVLDTDYGTQDSISLLEADTLRKAKTVSNQQANLCATIENPKEPIHGCSKD----TRNDTEGFVVPLTCKDNHT-QETSIEME---ESELDTQCLRNMFKVSKRQSFALFSYPRDPEEDCVTVCPRSGAFGKQGPKVTLECGQKEES #> B1_Btau_NP_848668  801 VHPSLQREE---NLGTIQ---VSNSTKDPKDLILREGKALQI-ERSVESTNISLVPDTDYSTQDSISLLEAKTPEKAKTAPNPCVSLCTATKNLKELIHRDFKD----TKNNTEGFQDLLGHDINYVIQETSREME---DSELDTQYLQNTFKASKRQTFALFSNPGNPQKECATVFAHSGSLRDQSPRDPLKCRQKEDS #> B1_Mdom_temp1.pep  801 ASCSVTEEGHEKSLEAVQ------SSQDQEDLAISGGEGSQG-QRAKGNLEALEVPDTDWDTQDSTSLFPANTPQNSKAGPNPHRSQCGIMETPKELLDGCSSEN---TGSTTEDLRGLMRQGVKNA-SETTTEME---DSELDTQYLQNTFKRSKRQTFALGSSP---RQECMKPCAISQALHQRGLHNATDCGDHEKE #> B1_Ggal_NP_989500  801 LSYMSLADRNGADLEANG---IQISSKNSDDMAK--NRSFFN-PTFSCQLSNFNSPSSKAGSQEGEMLGKLFLPQSPSKTVLHAASILTEEKRSWSCTV-FSQDKGCCSRNVPKDFRIGKSPMAKNA-SEFTMEAE---DSELDMQYLRNIFRSSKRQSFSLYPTP---MKACTTDDVASE-------KLNTSCPDQVEE #> B1_Xlav_AAL13037   801 FPPCTSEDT--GELEN-------------------GIPVRKI-SDQNASLDNPIDPCKDEYSDT------------------------------------------------------LLHVAGDNV-QPDYMETE---ESELETQHIVKMFKTSKRTSFILESKEAENENRVNSAVEISQV------ETSNELPNVAEC #> B1_Tnig_AAR89523   801 ---------KEQKWQADKNGCIYSQDMEEIENMDSGEKTSSR-PEEGSEQTLFEVPNTETLFQAACSVAE---------------------------------------------STAQPSNTARLL-TELEMENEQKNDSEQDTEQLVKSFKATKRKSFHLGSRPDVKRSRSLV-------------------QESDQS  #>  #> B1_Hsap_NP_009225 1001 QGKNESNIKPVQTVNITA-GFPVVGQK-DKPVDNAKCSIKGGSRFCLSSQFRGNETGLITPNKHGLLQNPYRIPPLFPIK--SFVKTKCKKNLLEENFEEHSMSP----EREMGNEN-IPSTVSTISRNNIRENVFKEASSSNINEVGSSTNEVGSSINEIGSSDENIQAELGRNRGPK--LNAMLRLGVLQPEVYKQSL #> B1_Ptro_AAG43492  1001 QGKNESNIKPVQTVNITA-GFPVVCQK-DKPVDYAKCSIKGGSRFCLSSQFRGNETGLITPNKHGLLQNPYHIPPLFPIK--SFVKTKCKKNLLEENFEEHSMSP----EREMGNEN-IPSTVSTISRNNIRENVFKEASSSNINEVGSSTNEVGSSINEVGSSDENIQAELGRNRGPK--LNAMLRLGVLQPEVYKQSL #> B1_Ggor_AAT44835  1001 QGKNESNIKPVQTVNITA-GFPVVCQK-DKPVDYAKCSIKGGSRFCLSSQFRGNETGLITPNKHGLLQNPYHIPPLFPIK--SFVKTKCKKNLLEENFEEHSMSP----EREMGNEN-IPSTVSTISRNNIRENVFKEASSSNINEVGSSTNEVGSSINEVGSSDENIQAELGRNRGPK--LNAMLRLGVLQPEVYKQSL #> B1_Ppyg_AAT44834  1001 QGKNESNIKPVQTANITA-GFPVVCQK-DKPVDYAKCSIKGGSRFCLSSQFRGNETGLITPNKHGLSQNPYHIPPLFPIK--SFVKTKCKKNLLEENSEEHSMSP----EREMGNEN-IPSTVSIISRNNIRENVFKEASSSNINEVGSSTNEVGSSINEVGSSDENIQAELGRSRGPK--LNAMLRLGVLQPEVYKQSF #> B1_Mmul_AAT44833  1001 QGKKESNIKPVQTVNITA-GFSVVCQK-DKPVDNAKCSIKGGSRFCLSSQFRGNETGLITPNKHGLLQNPYHIPPLFPVK--SFVKTKCNKNLLEENSEEHSVSP----ERAVGNENIIPSTVSTISHNNIRENAFKEASSSNINEVGSSTNEVGSSINEVGPSDENIQAELGRNRGPK--LNAVLRLGLLQPEVCKQSL #> B1_Mmus_AAD00168  1001 QGQEEFEISHVQAVAATV-GLPVLCQE-GKLAADTMCD--RGSRLCPSSHYRSGENGLSATGKSGISQNSHFKQSVSPIR--SSIKTDNRKPLTEGRFERHTSST----EMAVGNENILQSTVHTVSLNN-RGNACQEAGSG--------------SIHEVCSTGDSFPGQLGRNRGPK--VNTVPPLDSMQPGVCQQSV #> B1_Cfam_AAC48663  1001 QGKKESEIRHVQAVHTNA-GFSAVSQKAKKPGDFAKCSIKGVSRLCLSSQFKGKETELLIANYHGISQNPYHIPPLSPIR--SCVKTLCQENLSEEKFEQHSMSP----ERAVGNERVIQSTVSTISQNNIRECASKEVGSSSVNEVVSSTNEVGSSVNEVGSSGENIQAELGRNRGPK--LNAMLRLGLMQPEVCKQSL #> B1_Btau_NP_848668 1001 QGKSESKSQHVQAICTTV-HFPVADQQDRTPGDDAKCSAKEVTRVCQSSQLRGHKTELVFANKQGVSEKPNLIPSLSPIK--SSVKTICKKSP-SEKFEEPVTSP----EKTLGSESIIQSAVSTISQNNIQESTFKEVSSNSVNEVGSSTNEVGSSVNEVGSSGENIQAEPGRNREPK--LRALLGLGLTQPEVYKQSL #> B1_Mdom_temp1.pep 1001 KLGNRESNKPVQAKSAVM-NLAVVCQIERKPSDCASVSRI----CHIDPLHGGNDCEFIAGNNEEISQVPNQKQSVSPAG-SSTSKIIYTKKLLEENLDE--ISP----ETAVGNEILAQSSLSLVSPSNSRDCVSKVADLNRFIGIGSNGEGSQAEKHKNKESELNTLPKLKLVQPQV--CQQSFPQDNFSKEPEREEK #> B1_Ggal_NP_989500 1001 RNSKYLKTENLQEEKTTAENLSSVCEKFETCESACVSPV---------SCFVSSAACVHTVENQDVSKVANHGNLTTLLRICAARNEDGNRPQKGEQGSEKTLSTGIGVESKL-RLSPVRSNRSQSDQSNTEEHAFQRTGLNAV--------------SETYFSSESNQVEKAEVVDDKGLMQHFQPSPMLCPTACQQNP #> B1_Xlav_AAL13037  1001 RHTSLLSSAKEQSGALLKQGSPSSEPKKTSPIHMLKKTESKHSKMSRNRRGKVKPSSNSAKNTTGQPDNLNN-PTQGVTGSLYNKQVMSDFPMRLNVDEEHTNASAKGSQSSVADKSTAHSN------------------------------------------------------------------------------ #> B1_Tnig_AAR89523  1001 AGAEENRYVCSVDPSAPKHAEPAAAGKTDKVLVDS--------------------------------------------------QNMPGSDLISDSHLASLKRKASGLYSGCSAEGGCASASSPLPPNLESKHAGQSSKDSAICFATEKPSQISGS-------------------------QANFMMEDTQSSTLLQSV  #>  #> B1_Hsap_NP_009225 1201 PGSNCKHPEIK---------KQ-EYEEVVQTVNTDFSPYLISDNLEQPMGSSHASQVCSETPDDLL-DDGEIKEDTSFAENDIKESSAVFSK----SVQKGELSRSP-SPFTHTH--LAQGYRRGAKKLESSEENLSSEDEELPCFQHLLFGKVNNIPSQSTRHST---VATECLSKNTEENLLSLKNS--LNDCSNQVI #> B1_Ptro_AAG43492  1201 PESNCKHPEIK---------KQ-EYEEVVQTVNTDFSPCLISDNLEQPMGSSHASQVCSETPDDLL-DDGEIKEDTSFAENDIKESSAVFSK----SVQRGELSRSP-SPFTHTH--LAQGYRRGAKKLESSEENLSSEDEELPCFQHLLFGKVSNIPSQSTRHST---VATECLSKNTEENLLSLKNS--LNDCSNQVI #> B1_Ggor_AAT44835  1201 PGSNCKHPEIK---------KQ-EYEEVVQTVNTDFSPCLISDNLEQPMGSSHASQVCSETPDDLL-DDGEIKEDTSFAKNDIKESSAVFSK----NVQRGELSRSP-SPFTHTH--LAQGYRRGAKKLESSEENLSSEDEELPCFQHLLFGKVSNIPSQSTRHST---VATECLSKNTEENLLSLKNS--LNDCSNQVI #> B1_Ppyg_AAT44834  1201 PGSNGKHPEIK---------KQ-EYEEVLQTVNTDFSPCLISDNLEQPMRSSHASQVCSETPNDLL-DDGEIKEDTSFAENDIKESSAVFSK----SVQRGELSRSP-SPFTHTH--LAQGYRRGAKKLESSEENLSSEDEELPCFQHLLFGKVSNIPSQSTRHST---VATECLSKNTEENLLSLKNS--LNDYSNQVI #> B1_Mmul_AAT44833  1201 PISNCKHPEIK---------KQ-EHEELVQTVNTDFSPCLISDNLEQPMGSSHASEVCSETPDDLL-DDGEIKEDTSFAANDIKESSAVFSK----SIQRGELSRSP-SPFTHTH--LAQGYQKEAKKLESSEENLSSEDEELPCFQHLLFGKVSNIPSQTTRHST---VATECLSKNTEENLLSLKNS--LTDCSNQVI #> B1_Mmus_AAD00168  1201 PVSD-KYLEIK---------KQ-EGEAVC----ADFSPCLFSDHLEQSM-SGKVFQVCSETPDDLL-DDVEIQGHTSFGEGDIMERSAVFNG----SILRRESSRSP-SPVTHAS--KSQSLHRASRKLESSEESDSTEDEDLPCFQHLL-SRISNTPELTRCRSA---V-TQGIPEKAEGTQAPWKGS--SSDCNNEVI #> B1_Cfam_AAC48663  1201 SLSNCKHPEMK---------WQGQSEGAVLSVSADFSPCLISDNPEQPMGSSRSSQVCSETPDDLL-NGDKIKGKVSFAESDIKEKSAVFSK----SVQSGEFSRSP-SPSDHTR--LAQGYQRGTKKLESSEENMSSEEEELPCFQHLIFGKVTNMPSQSTSHNA---VAAEGLSNKTEENLDSLKNS--LSDISNQVP #> B1_Btau_NP_848668 1201 PVSNCHHPEIK---------RQGENEDMPQAVKADFSPCLISDNLEQPTGSRHASQVCSETPDNLL-NDDEIKENSHFAESDIKERSAVFSE----SVQKGEFRGSP-GPFTHTH--LAQGHQRGAGKLES-EETVSSEDEELPCFQQLLFGKVTSTLSPSTGCNT---VATEGLSKETEGNLESLKSG--LNDCSGQVT #> B1_Mdom_temp1.pep 1201 EENVKLTPAI----------------------SADSSPCL-----EQTKENTHFTQVWSETPD-LLDSDGELKENTSFAESDIKEQSAVFGKNG--KSSQVRKSRKNLSPLVHRNPSLSWKSRRQARKLESSEEEASSEEGELPSFQDLIFGKAASTPFQPTKNKT---IAKEFSANEAKENLAFLNRN-NMSVNNLQIP #> B1_Ggal_NP_989500 1201 AEFNCELTEKKIITRERSLVKG-NEERVIQTVSTGLSEFSVREALEESLKGHSDFTDLSETPDGLLCSDNDTEESASFYVTNRKDTSAVFVKRSGAAWVK-EVNDSVVSCKPRSE--GIQRFRRRAQKLQSSDEE-SSDDEDLPSFQELMFGKSVSTPLQIQKQVT--------SVVQSSANPSTLPCSECLNE-NNEQK #> B1_Xlav_AAL13037  1201 -------------------------------VNTDF-----------------ISDINSATPDGLL-HYMDKAEGNSSPWDTTRDKNAALLE----------------SCLPSAY--GSTGEKTPIPKVQSSEEGSSQ-------------GLFNQKPKCSSSGKADQKNSSKNPGKSQCRILSDFSGSSNNGKCSSQEM #> B1_Tnig_AAR89523  1201 KADAAKEP---------------------------------------------LNAPSSLTPSGL-----------------------------QTSVPGGEMTHSQSS---REL--STRRKRTKAQKLDCLSDSSDCAEEEFPCLAEIL--NETASPGEHATR----------------------PPACPSPDCVN---  #>  #> B1_Hsap_NP_009225 1401 LAKASQE---HHLSEETKCSASLFSSQCSELEDLTANTNTQDPFLI--GSSKQMRHQSESQGVGLSDKELVSDDE-ERGT--GLEEN--N-QEEQSMDSNLGEA-ASGCESETSVSEDCSGLSSQSDILTTQQRDTMQHNLIKLQQEMAELEAVLEQHGSQPSNSYPSIISDS-SALEDLRNPEQSTSEKAVLTSQKSSE #> B1_Ptro_AAG43492  1401 LAKASQE---HHLSEETKCSASLFSSQCSELEDLTANTNTQDPFLI--GSSKQMRHQSESQGVGLSDKELVSDDE-ERGT--GLEEN--N-QEEQSMDSNLGEA-ASGCESETSVSEDCSGLSSQSDILTTQQRDTMQDNLIKLQQEMAELEAVLEQHGSQPSNSYPSIISDS-SALEDLQNPEQSTSEKAVLTSQKSSE #> B1_Ggor_AAT44835  1401 LAKTSQE---HHLSEETKCSASLFSSQCSELEDLTANTNTQDPFLI--GSSKQMRHQSESQGVGLSDKELVSDDE-ERGT--GLEEN--N-QEEQSMDSNLGEA-ASGCESETSVSEDCSGLSSQSDILTTQQRDTMQDNLIKLQQEMAELEAVLEQHGSQPSNSYPSIISDS-SALEDLRNPEQSTSEKAVLTSQKSSE #> B1_Ppyg_AAT44834  1401 LVKASQE---HHLSEETKCSASLFSSQCSELEDLTANTNTQDRFFI--GSSKQMRHQSESQGVGLSDKELVSDDE-ERGT--DLEEN--N-QEEQGVDSNLGEA-ASGYESETSVSEDCSGLSSQSDILTTQQRDTMQDNLIKLQQEMAELEAVLEQHGSQPSNSYPSIISDS-SALEDLRNPEQSTSEKAVLTSQKSSE #> B1_Mmul_AAT44833  1401 LAKASQE---HHLSEETKCSGSLFSSQCSELEDLTANTNTQDPFLI--GSSKRMRHQSESQGVGLSDKELVSDDE-ERGT--GLEED--N-QEEQSVDSNLGEA-ASGYESETSVSEDCSRLSSQSEILTTQQRDTMQDNLIKLQQEMAELEAVLEQHGSQPSNSYPSIITDS-SALEDLRNPEQSTSEKAVLTSQKSSE #> B1_Mmus_AAD00168  1401 MIEASQE---HQFSEDPRCSGRMFSSQNSAAQGSTANANSQDSNFI--PPSKQRSHQCGNEEAFLSDKELISDNE-EMAT--CLEED--N-DQEE--DSIIPDSEASGYESETNLSEDC----SQSDILTTQQRATMKYNLIKLQQEMAHLEAVLEQRGNQPSGHSPSLLADP-CALEDLPDLEPNMSGAAILTSKNINE #> B1_Cfam_AAC48663  1401 SAKASQE---HHLSEEARCSGSLFSSQCSALEDLTVNTNTQDPFSMFDPTSKQVRHQSENLDV-LNDKELVSDDDDEREP--GLEED--SPQEEQSVDSDLGEV-ASGYESETSLSEDCSRLSSQSDILTTQQRDTMQDNLIKLQQEMAELEAVLEQHESQPSNSSPSLIADS-CSPEDLLNPEQNASER-VLTSEKSSD #> B1_Btau_NP_848668 1401 SAKVSQE---HHLNEEARCSGSLFSSQCSAMEDLTTNTNTQDPFLMFERPSKQV-YQSESEEV-LSDKELVSDDE-ERET--GLEED--SCQEEQSVDSDLGEA-VSDHVSETSLSEDGVGLSSQSDILTTQQRDTMQDNLLKLQQEMAELEAVLERHGSQPSHSSASLTADS-RGPEHLLNLEQDTSERAILTSEKSRD #> B1_Mdom_temp1.pep 1401 SGEASQD---HDSSQESECSGSLFSSHSNSLEDLAGKANDKDSALVF-GSSHQESSHSRTQEI-QSGSEMPKASQDKEERETDLDED--HHPKDQGVDSNLVVE-GSGYDSETSHPGDTSQLSFQSDILTTQQRDTMQDNLKKLQQEMAVLEAVLEQHSSQVTNNSSSQEPGL-CPSMDQPDLKQTNSERGA---EENVD #> B1_Ggal_NP_989500 1401 TLEAALSNECASPSQESECSVNLFSSQSNMSEESVDGAQELKKTLT--QVSNVKKSKEAPQSCSGGLKRLKNN----------LNDE--Y-QEDPNMGANLGE--ASGYDSETSRVEDSHEPFSQGEILSTQQKNAMQNNLKKLQQEMAVLEAVLKQHGSQDAEVLPLCRELPYCSIGGTLGLERMRQETENVSEHDS-- #> B1_Xlav_AAL13037  1401 LSKAA----FPSLSQESQCSVSLFSTQSNMSQQSVDEDHKQD----------------------VLQDELVSPNKTKRTAISGTEETQISPLRDQYQNPDIDE--ASECESEASHTGDSSILSSQDELLNTQQRNYMKDSLKKLQQEMAALEAVLGQHGTQKLEAETTCIPSS-EHVTEMQEATEEEEEETYQGENLFVK #> B1_Tnig_AAR89523  1401 ---------------SSQASVDLF-----------------------------------------------------------------------------------GTPHECAVN-DVASSQFSSEVLVTQQKIEMKKELVRLEKLMALVSEVLHEKEASPA------------------------KDMLDKTKQKITG  #>  #> B1_Hsap_NP_009225 1601 YPISQNPEGLSADKFEVS-ADSSTSKNKEPGVERSSPSKCPSLDDRWYMHSCSGSLQNRNYP-SQEELIKVVDVEEQQLEESGPHDLTETSYLPRQDLEGTPYLESGISLFSDDPESDPSEDRAPESARVGNIPSSTSALKVPQLKVAESAQSPAAAHTTDTAGY---NAMEESVSREKPELTASTERVNKRMSMVVSGL #> B1_Ptro_AAG43492  1601 YPISQNPEGLSADKFEVS-ADSSTSKNKEPGVERSSPSKCPSLDDRWYMHSCSGSLQNTNYP-SQEELIKVVDVEEQQLEESGPHDLTETSYLPRQDLEGTPYLESGISLFSDDPESDPSEDKAPESAHVGNIPSSTSALKVPQLKVAESAQSPAAAHTTNTAGY---NAMEESVSREKPELTASTERVNKRMSMVVSGL #> B1_Ggor_AAT44835  1601 YPISQNPEGLSADKFEVS-ADSSTSKNKEPGVERSSPSKCPSLDDRWYMHSCSGSLQNRNYP-SQEELIKVVDVEEQQLEESGPHDLTETSYLPRQDLEGTPYLESGISLFSDDPESDPSEDRAPESAHVGNIPSSTSALKVPQLKVAESAQSPAAAHTTNTAGY---HAMEESVSREKPELTASTERVNKRMSMVVSGL #> B1_Ppyg_AAT44834  1601 YPISQNPEGLSADKFEVS-ADSSTNKNKEPGVERSSPSKCPSLDDRWYMHSCSGSLQNGNYP-SQEELIKVVDVEKQQLEESGPHDLTEPSYLPRQDLEGTPYLESGISLFSDDPESDASEDRAPESAHVGSIPSSTSALKVPQLKVAESAQSPAAAQTTNTAGY---NAMEESVSREKPELTASTERVNKRMSMVVSGL #> B1_Mmul_AAT44833  1601 YPINQNPEGLSADKFEVS-ADSSTSKNKEPGVERSSPSKCQSLEDRWYVHSSSGSLQNGNYP-SQEELIKVVDVETQQLEKSGPHDLMEPSYLPRQDLDGTPYLESGISLFSDDPESDPSEDRAPESAHVGSIPSSTSALKVPQWQVAESAQSPAAAHNTNTAGY---NAMEESVSRENPKLTASTERVNKRMSLVVSGL #> B1_Mmus_AAD00168  1601 NPVSQNLKSACDDKFQLQHLEGPTSGDDESGMGRPSPFKSPLAGSRGSAHGCSRHLQKRNSP-SQEELLQPAGSE----ASSEPHNSTGQSCLPRRELEGTPYLGSGISLFS---SRDPESESPKEPAHIGTTPASTSALKIPQGQVAFRSAAAAGAD----------KAVVGIVSKIKPELTSSEERADRDISMVVSGL #> B1_Cfam_AAC48663  1601 SPISQNPESLSTDKFQVF-LDSSTSKNGEPGMIRSSPSQSRLLDTRWYVHSCPRSLQDTNCP-SQKELTKVVSMEEQQPTESEARDLMEQSYLSRPDLEGAPYLESGISLFSDDPESDPSSHRASELAHVSSMPTSTSALKLPQFQVEESAKSTAAVHIASTAGY---NKSEDSVGIEKPEVISSTRGVNKRISMVASGL #> B1_Btau_NP_848668 1601 YSRSQNPESLSADKFPVS-LDSSTNKNKEPGMERSSASKFQLSYNRWYMHS-SRSLQDRNCP-SQKEPINVADMEEQQLAKREAQDLMG-SFLPRQDQEGTPYLKSGISLFSHEPESDPSEDRAAEPAHVHSMPPSASALKLSQFRVEESTKNPAAAHIANTTRC---NLREESMSKEKPEVISSTERSKKRLSMVASGL #> B1_Mdom_temp1.pep 1601 HHKSQNVQSFSADKSRAF-PSDSNSKNEEAGVEGSSFSKSQMPNRVWSPLSRSRTPWEGDSP-S-EESGKVTTRKEEHKRQ------PNEQGVLKQNLEITTEPESGVKVNLKNIKSNPHQNKDPALRNIFNLPTSTSALRSSQLQTIEATNTTAPCAPAC-------NVRGQLKEDSASERLKKGGTGNRKISLVSSGL #> B1_Ggal_NP_989500 1601 --------------------ETKLTKASVLPVLCGNVTKNPNSSSFSVKHPCPQTAEAT----------------------------------------------------------DSSAVAQGDNKSNVQVCKSKRSVCFPTSVLHNVA--------------------------GKENAASSGTTCRTEMSIVASGL #> B1_Xlav_AAL13037  1601 TPPE-----------HVANGSTLIGQSTDNGLQGRNRPVSPSFLCQTRIEKDTPEIVCPAMGISKKSLLTQKELPSQHKQEIRP-DLETVNVTPTNPIDAQESLRQS----SKNKRGSRMLHNKRSTSNQGSFCLSVEAAESPQIPKQNKAEFGIARKSTSPTFASPARAKVPSVGFKSPVVS-----SRRNLSFVASGL #> B1_Tnig_AAR89523  1601 SDVDHVLSCGQGEVFNQETFPEEEEQDANASLNDGKGAARPTGSKHSSITEL----------------------------------------------NSRISNTVGLSSAAKTLKSDGSPSDGHE---------------------------------------------------DKENNTPERARSLARMLLVTSGL  #>  #> B1_Hsap_NP_009225 1801 TPEEFMLVYKFARKHHITLTNLITEETTHVVMKTDAEFVCERTLKYFLGIAGGKWVVSYFWVTQSIKERKMLNEHDFEVRGDVVNGRNHQGPKRARESQDR-----KIFRGLEICCYGPFTNMPTDQLEWMVQLCGASVVKELSSFTLGTGVHPIVVVQPDAWTEDNGFHAIGQMCEAPVVTREWVLDSVALYQCQELDT #> B1_Ptro_AAG43492  1801 TPEEFMLVYKFARKHHITLTNLITEETTHVVMKTDAEFVCERTLKYFLGIAGGKWVVSYFWVTQSIKERKMLNEHDFEVRGDVVNGRNHQGPKRARESQDR-----KIFRGLEICCYGPFTNMPTDQLEWMVQLCGASVVKELSSFTLGTGVHPIVVVQPDAWTEDNGFHAIGQMCEAPVVTREWVLDSVALYQCQELDT #> B1_Ggor_AAT44835  1801 TPEEFMLVYKFARKHHITLTNLITEETTHVVMKTDAEFVCERTLKYFLGIAGGKWVVSYFWVTQSIKEGKMLNEHDFEVRGDVVNGRNHQGPKRARESQDR-----KIFRGLDICCYGPFTNMPTDQLEWMVQLCGASVVKELSSFTLGTGVHPIVVVQPDAWTEDNGFHAIGQMCEAPVVTREWVLDSVALYQCQELDT #> B1_Ppyg_AAT44834  1801 TPEEFMLVYKFARKHHITLTNLITEETTHVVMKTDAEFVCERTLKYFLGIAGGKWVVSYFWVTQSIKERKMLNEHDFEVRGDVVNGRNHQGPKRARESQDR-----KIFRGLEICCYGPFTNMPTDQLEWIVQLCGASVVKELSSFTLGTGVHPIVVVQPDAWTEDNGFHAIGQMCEAPVVTREWVLDSVALYQCQELDT #> B1_Mmul_AAT44833  1801 TPEEFMLVYKFARRYHIALTNLISEETTHVVMKTDAEFVCERTLKYFLGIAGGKWVVSYFWVTQSIKERKMLNEHDFEVRGDVVNGRNHQGPKRARESPDR-----KIFRGLEICCYGPFTNMPTDQLEWMVQLCGASVVKELSSFTLGTGFHPIVVVQPDAWTEDNGFHAIGQMCEAPVVTREWVLDSVALYQCQELDT #> B1_Mmus_AAD00168  1801 TPKEVMTVQKFAEKYRLTLTDAITEETTHVIIKTDAEFVCERTLKYFLGIAGGKWIVSYSWVVRSIQERRLLNVHEFEVKGDVVTGRNHQGPRRSRESRE------KLFKGLQVYCCEPFTNMPKDELERMLQLCGASVVKELPSLTHDTGAHLVVIVQPSAWTEDSNCPDIGQLCKARLVMWDWVLDSLSSYRCRDLDA #> B1_Cfam_AAC48663  1801 TPKEFMLVHKFARKHHISLTNLISEETTHVIMKTDAEFVCERTLKYFLGIAGGKWVVSYFWVTQSIKERKILDEHDFEVRGDVVNGRNHQGPKRARESQDRESQDRKIFRGLEICCYGPFTNMPTDQLEWMVHLCGASVVKEPSLFTLSKGTHPVVVVQPDAWTEDSGFHAIGQMCEAPVVTREWVLDSVALYQCQELDT #> B1_Btau_NP_848668 1801 TPKELMLVQKFARKHHVTLTNLITEETTHVIMKTDPEFVCERTLKYFLGIAGGKWVVSYFWVTQSIKEGKMLDEHDFEVRGDVVNGRNHQGPKRARESRDK-----KIFKGLEICCYGPFTNMPTDQLEWMVQLCGASVVKEPSSFTPDQGTHPVVVVQPDAWTEDAGFHVIGQMCEAPVVTREWVLDSVALYQCQELDT #> B1_Mdom_temp1.pep 1801 TPKENMLVQKFARKTHSTVSHQITEGTTHVIMKTDAEFVCERTLKYFLGIAGGKWVVSFLWVVQSFKEGKMLPECDFEVRGDVINGRNHRGPERARESQGM-----KIFRGLEICCYGPFTDMSTDQLEWMVQLCGASVVKKPSSLRFRVGSSPVVVVQPDAWEDDSSFQEIGLVCEAPVVTREWVLDSVACYQRQELDT #> B1_Ggal_NP_989500 1801 NQSEHLMVQKFARKTQSTFSNHITDGTTHVIMKTDEELVCERTLKYFLGIAGRKWVVSYQWIIQSFKEGRILDEEHFEVKGDVINGRNHQGPKRARQSPAE-----KIFKDFEICCCGPFTDMTTGHLEWIVELCGASVVKQLHLFTHKVNSTAVVVVQPDAWMEGTSYEAIQRKNNVAVVTREWVLDSVACFECQELDA #> B1_Xlav_AAL13037  1801 NQCEMALVQRFSKTTQSILSSRITDSTTHVIMKTDAELVCERTLKYFQGIASRKWVVSYEWVVQSFREGQILDEYDFEVKGDVINGRNHRGPRRSRLGSDG-----LLLIDFEICFFGSFTDMTLDDLEWMVSECGATVVKKLQFFKKKHNVTSLVIVQPDASTEVRDYTEIRKKHKALVVTREWLMDSVATYRLQKFDA #> B1_Tnig_AAR89523  1801 GPSQQITVKKFAKRIGATVVSQVTPEVTHVVMHTDEQLVCERTLKYFLGIAGRKWVVSFQWISECIKQKKLLNETLFEVRGDVVNGFDHQGPMKARATADN----NLLMKGYSICFQGPFTDMTTAEMELMVELCGATVVQDPLLLDGKRTSHQLIVVQSGS----ESSRSVSG--KATVVTRGWLLDSVATYTIQNLKN  #>  #> B1_Hsap_NP_009225 2001 YLIPQIPHSHY------- #> B1_Ptro_AAG43492  2001 YLIPQIPHSHY------- #> B1_Ggor_AAT44835  2001 YLIPQIPHSHY------- #> B1_Ppyg_AAT44834  2001 YLIPQIPHSHY------- #> B1_Mmul_AAT44833  2001 YLIPQIPHSHY------- #> B1_Mmus_AAD00168  2001 YLVQNITCDSSEPQDSND #> B1_Cfam_AAC48663  2001 YLIPQIPRTAADSSQPCV #> B1_Btau_NP_848668 2001 YLVP-------------- #> B1_Mdom_temp1.pep 2001 YLISQTSPSLC------- #> B1_Ggal_NP_989500 2001 YLVSQD------------ #> B1_Xlav_AAL13037  2001 YLA--------------- #> B1_Tnig_AAR89523  2001 YRADLRAA---------- path <- system.file(\"extdata/lee2010_sub.txt\", package = 'agvgd', mustWork = TRUE) missense_variants <- read_substitutions(path) missense_variants #> # A tibble: 117 × 4 #>      res   poi ref   sub   #>    <int> <int> <chr> <chr> #>  1  1647    NA N     K     #>  2  1651    NA S     F     #>  3  1652    NA M     T     #>  4  1652    NA M     I     #>  5  1653    NA V     M     #>  6  1655    NA S     F     #>  7  1656    NA G     D     #>  8  1662    NA F     S     #>  9  1663    NA M     L     #> 10  1663    NA M     K     #> # … with 107 more rows missense_variants$poi <- res_to_poi(brca1_alignment, missense_variants$res) missense_variants #> # A tibble: 117 × 4 #>      res   poi ref   sub   #>    <int> <int> <chr> <chr> #>  1  1647  1790 N     K     #>  2  1651  1794 S     F     #>  3  1652  1795 M     T     #>  4  1652  1795 M     I     #>  5  1653  1796 V     M     #>  6  1655  1798 S     F     #>  7  1656  1799 G     D     #>  8  1662  1805 F     S     #>  9  1663  1806 M     L     #> 10  1663  1806 M     K     #> # … with 107 more rows"},{"path":"https://maialab.org/agvgd/articles/lee2010.html","id":"running-agvgd","dir":"Articles","previous_headings":"Reproducing the AGVGD scores","what":"Running agvgd()","title":"Missense Variations in the BRCT Domain of BRCA1","text":"Run Align-GVGD function agvgd():","code":"scores <- agvgd(alignment = brca1_alignment,       poi = missense_variants$poi,       sub = missense_variants$sub)  print(scores, n = Inf) #> # A tibble: 117 × 7 #>       res   poi ref   sub      gv     gd prediction #>     <int> <int> <chr> <chr> <dbl>  <dbl> <chr>      #>   1  1647  1790 N     K     177.    0    C0         #>   2  1651  1794 S     F     144.   21.3  C0         #>   3  1652  1795 M     T      30.3  81.0  C25        #>   4  1652  1795 M     I      30.3   0    C0         #>   5  1653  1796 V     M       0    21.5  C15        #>   6  1655  1798 S     F       0   155.   C65        #>   7  1656  1799 G     D       0    93.8  C65        #>   8  1662  1805 F     S     161.   25.1  C0         #>   9  1663  1806 M     L      96.2   0    C0         #>  10  1663  1806 M     K      96.2  57.1  C0         #>  11  1664  1807 L     P      92.4  28.9  C0         #>  12  1665  1808 V     M       0    21.5  C15        #>  13  1669  1812 A     S      99.1   0    C0         #>  14  1682  1825 E     K     117.   36.7  C0         #>  15  1682  1825 E     V     117.   43.3  C0         #>  16  1685  1828 T     I       0    89.3  C65        #>  17  1685  1828 T     A       0    58.0  C55        #>  18  1689  1832 M     T      10.1  81.0  C55        #>  19  1689  1832 M     R      10.1  90.6  C55        #>  20  1691  1834 T     K       0    77.7  C65        #>  21  1691  1834 T     I       0    89.3  C65        #>  22  1692  1835 D     H       0    81.2  C65        #>  23  1692  1835 D     N       0    23.0  C15        #>  24  1692  1835 D     Y       0   160.   C65        #>  25  1695  1838 F     L      21.8   0    C0         #>  26  1696  1839 V     L       0    31.8  C25        #>  27  1697  1840 C     R       0   180.   C65        #>  28  1699  1842 R     W       0   101.   C65        #>  29  1699  1842 R     Q       0    42.8  C35        #>  30  1699  1842 R     L       0   102.   C65        #>  31  1700  1843 T     A       0    58.0  C55        #>  32  1706  1849 G     A       0    60    C55        #>  33  1706  1849 G     E       0    97.8  C65        #>  34  1708  1851 A     V       0    64.4  C55        #>  35  1708  1851 A     E       0   107.   C65        #>  36  1713  1856 V     A      29.6  64.4  C25        #>  37  1714  1857 V     G       0   109.   C65        #>  38  1715  1858 S     R       0   109.   C65        #>  39  1715  1858 S     N       0    46.2  C45        #>  40  1715  1858 S     C       0   112.   C65        #>  41  1718  1861 W     C       0   214.   C65        #>  42  1718  1861 W     S       0   177.   C65        #>  43  1720  1863 T     A     142.    1.01 C0         #>  44  1722  1865 S     F     112.  125.   C15        #>  45  1726  1869 R     G     131.    0    C0         #>  46  1730  1873 N     S     108.    2.79 C0         #>  47  1733  1876 D     G     172.   51.7  C0         #>  48  1734  1877 F     S       0   155.   C65        #>  49  1736  1879 V     A       0    64.4  C55        #>  50  1736  1879 V     G       0   109.   C65        #>  51  1738  1881 G     E       0    97.8  C65        #>  52  1738  1881 G     R       0   125.   C65        #>  53  1739  1882 D     Y       0   160.   C65        #>  54  1739  1882 D     V       0   152.   C65        #>  55  1739  1882 D     E       0    44.6  C35        #>  56  1739  1882 D     G       0    93.8  C65        #>  57  1741  1884 V     G      29.6 109.   C35        #>  58  1746  1889 H     N       0    68.4  C65        #>  59  1749  1892 P     R       0   103.   C65        #>  60  1751  1894 R     P      26    96.5  C35        #>  61  1751  1894 R     Q      26    38.2  C0         #>  62  1752  1895 A     V      99.1  63.6  C0         #>  63  1752  1895 A     P      99.1   1.7  C0         #>  64  1753  1896 R     T       0    71.0  C65        #>  65  1761  1909 F     S      30.3 135.   C45        #>  66  1763  1911 G     V      93.8  77.6  C15        #>  67  1764  1912 L     P      35.7  85.7  C25        #>  68  1766  1914 I     S      29.6 123.   C35        #>  69  1771  1919 P     L      73.4  97.8  C15        #>  70  1771  1919 P     R      73.4  95.1  C15        #>  71  1773  1921 T     I       0    89.3  C65        #>  72  1773  1921 T     S       0    57.8  C55        #>  73  1775  1923 M     R       0    91.6  C65        #>  74  1775  1923 M     K       0    94.5  C65        #>  75  1778  1926 D     G     134.    0    C0         #>  76  1778  1926 D     Y     134.   88.6  C15        #>  77  1778  1926 D     N     134.    2.03 C0         #>  78  1780  1928 L     P      14.3  86.6  C45        #>  79  1783  1931 M     I      10.1   0    C0         #>  80  1783  1931 M     T      10.1  81.0  C55        #>  81  1783  1931 M     L      10.1   4.86 C0         #>  82  1785  1933 Q     H     100.    0    C0         #>  83  1787  1935 C     S       0   112.   C65        #>  84  1788  1936 G     V       0   109.   C65        #>  85  1788  1936 G     D       0    93.8  C65        #>  86  1789  1937 A     S       0    99.1  C65        #>  87  1794  1942 E     D     106.    0    C0         #>  88  1803  1951 G     A      87.3  49.4  C0         #>  89  1804  1952 V     D     155.   61.5  C0         #>  90  1805  1953 H     P      91.6  16.3  C0         #>  91  1806  1954 P     A     156.    0    C0         #>  92  1808  1956 V     A      29.6  64.4  C25        #>  93  1809  1957 V     F      29.6  21.3  C0         #>  94  1809  1957 V     A      29.6  64.4  C25        #>  95  1810  1958 V     G       0   109.   C65        #>  96  1811  1959 Q     R       0    42.8  C35        #>  97  1818  1966 D     G     251.    0    C0         #>  98  1819  1967 N     S     152.    0    C0         #>  99  1823  1971 A     T     160.    0    C0         #> 100  1826  1974 Q     H     172.    0    C0         #> 101  1830  1978 A     T      64.4  49.4  C0         #> 102  1833  1981 V     M       0    21.5  C15        #> 103  1835  1983 R     P     101.   92.7  C15        #> 104  1836  1984 E     K     113.   46.1  C0         #> 105  1837  1985 W     R       0   101.   C65        #> 106  1837  1985 W     G       0   184.   C65        #> 107  1837  1985 W     C       0   214.   C65        #> 108  1838  1986 V     E      31.8 121.   C35        #> 109  1841  1989 S     N       0    46.2  C45        #> 110  1841  1989 S     R       0   109.   C65        #> 111  1843  1991 A     P      99.1   1.7  C0         #> 112  1844  1992 L     R     217.   24.8  C0         #> 113  1851  1999 D     E     101.    0    C0         #> 114  1853  2001 Y     C       0   194.   C65        #> 115  1854  2002 L     P     102.   79.5  C15        #> 116  1856  2004 P     S     238.    0    C0         #> 117  1859  2007 P     R     354.    0    C0"},{"path":"https://maialab.org/agvgd/articles/lee2010.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Missense Variations in the BRCT Domain of BRCA1","text":"1. Lee, M. S. et al. Comprehensive analysis missense variations BRCT domain BRCA1 structural functional assays. Cancer Research 70, 4880–4890 (2010).","code":""},{"path":"https://maialab.org/agvgd/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ramiro Magno. Author, maintainer. Isabel Duarte. Author. Ana-Teresa Maia. Author. . Copyright holder, funder.","code":""},{"path":"https://maialab.org/agvgd/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Magno R, Duarte , Maia (2022). agvgd: R Implementation 'Align-GVGD' Method. https://maialab.org/agvgd/, https://github.com/maialab/agvgd.","code":"@Manual{,   title = {agvgd: An R Implementation of the 'Align-GVGD' Method},   author = {Ramiro Magno and Isabel Duarte and Ana-Teresa Maia},   year = {2022},   note = {https://maialab.org/agvgd/, https://github.com/maialab/agvgd}, }"},{"path":"https://maialab.org/agvgd/index.html","id":"agvgd-","dir":"","previous_headings":"","what":"An R Implementation of the Align-GVGD Method","title":"An R Implementation of the Align-GVGD Method","text":"R package agvgd provides R implementation Align-GVGD1,2,3 (-GVGD) method. -GVGD combines multiple sequence alignment orthologous sequences Grantham distance4 classify missense variants, .e. distinguish human disease susceptibility missense changes changes little clinical significance.","code":""},{"path":"https://maialab.org/agvgd/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Implementation of the Align-GVGD Method","text":"Install agvgd CRAN: can install development version agvgd like :","code":"install.packages(\"agvgd\") # install.packages(\"remotes\") remotes::install_github(\"maialab/agvgd\")"},{"path":"https://maialab.org/agvgd/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"An R Implementation of the Align-GVGD Method","text":"minimal example using dummy alignment constructed R matrix: another simple example using one bundled alignments agvgd. one alignment gene ATM. Let’s say interested position 16 alignment, like know impact possible missense substitutions:","code":"library(agvgd)  # The alignment can be provided as a simple matrix: alignment <- matrix(   c('P', 'M', 'I',     'P', 'I', 'I',     'P', 'L', 'I'),   nrow = 3,   byrow = TRUE )  # In this example we will interrogate changes to the second position in the # alignment, i.e., changes to Methionine (M); therefore we set the position of # interest (poi) to 2. poi <- 2  # Here's a set of three possible missense changes (substitutions): Isoleucine # (Ile, I), Leucine (Leu, L), and Tryptophan (Trp, W): substitutions <- c('I', 'L', 'W')  # agvgd package's main function is `agvgd()` :) agvgd(alignment = alignment, poi = poi, sub = substitutions) #> # A tibble: 3 × 7 #>     res   poi ref   sub      gv    gd prediction #>   <int> <int> <chr> <chr> <dbl> <dbl> <chr>      #> 1     2     2 M     I      14.3   0   C0         #> 2     2     2 M     L      14.3   0   C0         #> 3     2     2 M     W      14.3  60.4 C35 # `read_alignment()` either reads in one of the bundled alignments with # `{agvgd}` by gene name or directly from a FASTA file. alignment <- read_alignment(gene = 'ATM')  # For the sake of illustration, let us define a new alignment based on a narrow # region of the original alignment by focusing only on the first 30 positions. # Note: rows are protein sequences; columns are alignment positions. narrow_alignment <- alignment[, 1:30]  # poi: position of interest poi <- 16  # Print the alignment to the console and highlight the position of interest # (POI). NB: The POI is not highlighted in GitHub's README but it is on the R # console. print(narrow_alignment, poi = poi) #> Hsap_ATM_AAB65827.1  1 M-SLVLNDLLICCRQLEHDRATERKKEVEK #> Mmus_ATM_NP_031525.2 1 M-SLALNDLLICCRQLEHDRATERRKEVDK #> Sscr_ATM_AAT01608.1  1 M-SLALNDLLICCRQLEHDRATERRKAVEN #> Mdom_ATM_IARC        1 M-SLALNDLLLCCRQLENDRATERRKEVEK #> Ggal_ATM_edited      1 M-SLVLHDLLTCCRRLENERATERRNEIEN #> Xlae_ATM_AAT72929.1  1 M-SLALHELLLCCRQIETDKATERKKEIVK #> Drer_ATM_IARC_v2     1 M-SLALHELLVCCRGLENEKATERKKEVDR #> Bflo_ATM_IARC        1 MTDLLTHDLRDCCCHLESDKVTERKKNAEK #> Spur_ATM_ABY60856.1  1 MAEVLIP-LRTACGYLGSDKITERKKQIDI  # You may use `amino_acids()` to get a vector of all the 20 standard amino acids # and hence easily get a vector of all possible substitutions: all_substitutions <- amino_acids()  agvgd(alignment = narrow_alignment, poi = poi, sub = all_substitutions) #> # A tibble: 20 × 7 #>      res   poi ref   sub      gv    gd prediction #>    <int> <int> <chr> <chr> <dbl> <dbl> <chr>      #>  1    15    16 L     S      4.86 142.  C65        #>  2    15    16 L     R      4.86  97.6 C65        #>  3    15    16 L     L      4.86   0   C0         #>  4    15    16 L     P      4.86  95.4 C65        #>  5    15    16 L     T      4.86  89.3 C65        #>  6    15    16 L     A      4.86  93.7 C65        #>  7    15    16 L     V      4.86  29.6 C15        #>  8    15    16 L     G      4.86 135.  C65        #>  9    15    16 L     I      4.86   0   C0         #> 10    15    16 L     F      4.86  21.3 C0         #> 11    15    16 L     Y      4.86  33.0 C25        #> 12    15    16 L     C      4.86 197.  C65        #> 13    15    16 L     H      4.86  94.3 C65        #> 14    15    16 L     Q      4.86 109.  C65        #> 15    15    16 L     N      4.86 149.  C65        #> 16    15    16 L     K      4.86 102.  C65        #> 17    15    16 L     D      4.86 168.  C65        #> 18    15    16 L     E      4.86 134.  C65        #> 19    15    16 L     M      4.86  10.1 C0         #> 20    15    16 L     W      4.86  60.5 C55"},{"path":"https://maialab.org/agvgd/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"An R Implementation of the Align-GVGD Method","text":"data information contained herein results agvgd package provided basis authors makes representations warranties, either expressed implied, accuracy, completeness suitability particular purpose. Similarly, authors make representations warranties regard non-infringement third party proprietary rights. Thus, authors accept responsibility liability regard reliance , /use , data information.","code":""},{"path":"https://maialab.org/agvgd/index.html","id":"logo","dir":"","previous_headings":"","what":"Logo","title":"An R Implementation of the Align-GVGD Method","text":"agvgd logo, agvgd.png, derivative work illustration “Globin Evolution” David S. Goodsell RCSB PDB, used CC--4.0. agvgd.png licensed CC--4.0 Ramiro Magno.","code":""},{"path":"https://maialab.org/agvgd/index.html","id":"related-software","dir":"","previous_headings":"","what":"Related software","title":"An R Implementation of the Align-GVGD Method","text":"Align-GVGD (-GVGD) Sean Tavtigian, provided web service hosted Huntsman Cancer Institute http://agvgd.hci.utah.edu/. Multivariate Analysis Protein Polymorphism (MAPP)5 Eric Stone ideas -GVGD sophisticated framework. used provided Java standalone application: https://biology.anu.edu.au/research/groups/stone-group-quantitative--computational-biology/software; however, download link MAPP long . grantham package.","code":""},{"path":"https://maialab.org/agvgd/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"An R Implementation of the Align-GVGD Method","text":"work package benefited greatly feedback Professor Sean Tavtigian, Dr. Russell Bell.","code":""},{"path":"https://maialab.org/agvgd/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"An R Implementation of the Align-GVGD Method","text":"1. Tavtigian, S.V., Deffenbaugh, . M., Yin, L., Judkins, T., Scholl, T., Samollow, P.B., de Silva, D., Zharkikh, ., Thomas, . Comprehensive statistical study 452 BRCA1 missense substitutions classification eight recurrent substitutions neutral. Journal Medical Genetics 43, 295–305 (2006). doi: 10.1136/jmg.2005.033878. 2. Mathe, E., Olivier, M., Kato, S., Ishioka, C., Hainaut, P., Tavtigian, S.V. Computational approaches predicting biological effect p53 missense mutations: comparison three sequence analysis based methods. Nucleic Acids Research 34, 1317–1325 (2006). doi: 10.1093/nar/gkj518. 3. Tavtigian, S.V., Byrnes, G. B, Goldgar, D. E., Thomas, . Classification rare missense substitutions, using risk surfaces, genetic- molecular-epidemiology applications. Human Mutation 29, 1342–1354. doi: 10.1002/humu.20896 3. Grantham, R. Amino acid difference formula help explain protein evolution. Science 185, 862–864 (1974). doi: 10.1126/science.185.4154.862. 4. Stone, E. ., Sidow, Arend. Physicochemical constraint violation missense substitutions mediates impairment protein function disease severity. Genome Research 15, 978–986 (2005). doi: 10.1101/gr.3804205.","code":""},{"path":"https://maialab.org/agvgd/notes.html","id":"notes","dir":"","previous_headings":"","what":"Notes","title":"NA","text":"Update function reference reflect newly exported functions. Ponder using Hart et al. (2019) scores example Article. See Supplementary Table 2. Ponder using Borg et al. (2010) scores example . Explain AGVGD method graphical way, particularly handling gaps.","code":""},{"path":"https://maialab.org/agvgd/reference/agvgd-package.html","id":null,"dir":"Reference","previous_headings":"","what":"agvgd: An R Implementation of the 'Align-GVGD' Method — agvgd-package","title":"agvgd: An R Implementation of the 'Align-GVGD' Method — agvgd-package","text":"'Align-GVGD' ('-GVGD') method predict impact 'missense' substitutions based properties amino acid side chains protein multiple sequence alignments <doi:10.1136/jmg.2005.033878>. '-GVGD' extension original 'Grantham' distance multiple sequence alignments. package provides alternative R implementation web version found <http://agvgd.hci.utah.edu/>.","code":""},{"path":[]},{"path":"https://maialab.org/agvgd/reference/agvgd-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"agvgd: An R Implementation of the 'Align-GVGD' Method — agvgd-package","text":"Maintainer: Ramiro Magno ramiro.magno@gmail.com (ORCID) Authors: Isabel Duarte iduarte.scientist@gmail.com (ORCID) Ana-Teresa Maia maia.anateresa@gmail.com (ORCID) contributors: CINTESIS [copyright holder, funder]","code":""},{"path":"https://maialab.org/agvgd/reference/agvgd.html","id":null,"dir":"Reference","previous_headings":"","what":"Align-GVGD (A-GVGD) — agvgd","title":"Align-GVGD (A-GVGD) — agvgd","text":"function implements Align-GVGD (-GVGD) method described Tavtigian et al. (2006). -GVGD combines multiple sequence alignment orthologous sequences Grantham distance classify missense variants, .e. distinguish human disease susceptibility missense changes changes little clinical significance. biochemical variation alignment position converted Grantham Variation score (GV) difference properties variant amino acid assessed calculated Grantham Difference score generated (GD).  predicted effect classed C0, C15, C25, C35, C45, C55, C65, C65 likely interfere function C0 least likely.","code":""},{"path":"https://maialab.org/agvgd/reference/agvgd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align-GVGD (A-GVGD) — agvgd","text":"","code":"agvgd(   alignment,   poi,   sub,   mode = c(\"recycle\", \"expand_grid\"),   sort = FALSE,   keep_self = TRUE,   digits = 2L )"},{"path":"https://maialab.org/agvgd/reference/agvgd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align-GVGD (A-GVGD) — agvgd","text":"alignment character matrix alignment object obtained read_alignment(). Rows expected sequences single characters (protein residues), columns alignment positions. first row must reference sequence, .e. sequence whose substitutions evaluated . poi whole number indicating position interest (POI). sub character vector protein residue substitutions classified. amino acids must provided one-letter symbols. mode poi sub contain one element, mode specifies two inputs combined. mode = 'recycle' shortest vector recycled match length longest. mode = 'expand_grid', combinations elements poi sub combined. sort Whether sort output gd, . Default FALSE. keep_self Whether keep results output correspond residues ref sub. Default TRUE. useful change FALSE want compare results provided http://agvgd.hci.utah.edu/ filters . digits Integer indicating number decimal places used rounding gv gd values. Default 2. Note calculation prediction variable affected rounding gv gd, calculated prior rounding.","code":""},{"path":"https://maialab.org/agvgd/reference/agvgd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align-GVGD (A-GVGD) — agvgd","text":"tibble whose observations refer combination alignment position amino acid substitution; consists seven variables: res Position amino acid residue reference protein (first sequence alignment). position corresponds poi minus gaps alignment. poi Position interest, .e. alignment position amino acid substitution assessed. ref Reference amino acid, .e. amino acid first sequence alignment, position interest. sub Amino acid substitution assessed. gv Grantham variation score. gd Grantham difference score. prediction Predicted effect amino acid substitution. classed C0, C15, C25, C35, C45, C55, C65, C65 likely interfere function C0 least likely.","code":""},{"path":"https://maialab.org/agvgd/reference/agvgd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Align-GVGD (A-GVGD) — agvgd","text":"Tavtigian, S.V., Deffenbaugh, . M., Yin, L., Judkins, T., Scholl, T., Samollow, P.B., de Silva, D., Zharkikh, ., Thomas, . Comprehensive statistical study 452 BRCA1 missense substitutions classification eight recurrent substitutions neutral. Journal Medical Genetics 43, 295--305 (2006). doi:10.1136/jmg.2005.033878 . Mathe, E., Olivier, M., Kato, S., Ishioka, C., Hainaut, P., Tavtigian, S.V. Computational approaches predicting biological effect p53 missense mutations: comparison three sequence analysis based methods. Nucleic Acids Research 34, 1317--1325 (2006). doi:10.1093/nar/gkj518 .","code":""},{"path":"https://maialab.org/agvgd/reference/agvgd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Align-GVGD (A-GVGD) — agvgd","text":"","code":"# Read an alignment into R, e.g. the alignment for gene ATM. alignment_ATM <- read_alignment(gene = 'ATM')  # Predict the impact of changing the first residue (Met) to a Serine (S). agvgd(alignment = alignment_ATM, poi = 1, sub = 'S') #> # A tibble: 1 × 7 #>     res   poi ref   sub      gv    gd prediction #>   <int> <int> <chr> <chr> <dbl> <dbl> <chr>      #> 1     1     1 M     S         0  135. C65         # `poi` can be a vector of positions, e.g., 3 thru 10, allow for prediction # of multiple positions at once. agvgd(alignment = alignment_ATM, poi = 3:10, sub = 'S') #> # A tibble: 8 × 7 #>     res   poi ref   sub      gv    gd prediction #>   <int> <int> <chr> <chr> <dbl> <dbl> <chr>      #> 1     2     3 S     S      87.4   0   C0         #> 2     3     4 L     S      31.8 123.  C35        #> 3     4     5 V     S      96.2  99.1 C15        #> 4     5     6 L     S      92.4  57.8 C0         #> 5     6     7 N     S     108.    6.2 C0         #> 6     7     8 D     S     223.   50.2 C0         #> 7     8     9 L     S       0   144.  C65        #> 8     9    10 L     S     102.   95.9 C15         # `poi` expects a position in the frame of reference of the alignment, i.e. # an alignment position (a column index). However, if you know instead # the residue position in the reference sequence (first sequence in the # alignment), then you may use the function `res_to_poi()` # to convert from residue position to alignment position. # # Example: The second residue in the reference sequence of the ATM alignment # is a Serine, after a Methionine. In the alignment, there is a gap between # the two residues, so the alignment is 3 but the residue position on the # protein is 2. (poi2 <- res_to_poi(alignment_ATM, 2)) #> [1] 3 agvgd(alignment = alignment_ATM, poi = poi2, sub = 'A') #> # A tibble: 1 × 7 #>     res   poi ref   sub      gv    gd prediction #>   <int> <int> <chr> <chr> <dbl> <dbl> <chr>      #> 1     2     3 S     A      87.4  65.6 C0          # Because changes are context-dependent, i.e. they depend on the residue # variation observed at a given alignment position, the same reference # residue when replaced with the same substitution will in general have # a different predicted impact. agvgd(alignment = alignment_ATM, poi = 9:10, sub = 'S') #> # A tibble: 2 × 7 #>     res   poi ref   sub      gv    gd prediction #>   <int> <int> <chr> <chr> <dbl> <dbl> <chr>      #> 1     8     9 L     S        0  144.  C65        #> 2     9    10 L     S      102.  95.9 C15         # Use the ancillary function `amino_acids()` to get a vector of one-letter # residue substitutions if you want to quickly assess the impact of all # possible substitutions. agvgd(alignment = alignment_ATM, poi = 1, sub = amino_acids()) #> # A tibble: 20 × 7 #>      res   poi ref   sub      gv    gd prediction #>    <int> <int> <chr> <chr> <dbl> <dbl> <chr>      #>  1     1     1 M     S         0 135.  C65        #>  2     1     1 M     R         0  91.6 C65        #>  3     1     1 M     L         0  14.3 C0         #>  4     1     1 M     P         0  86.6 C65        #>  5     1     1 M     T         0  81.0 C65        #>  6     1     1 M     A         0  84.4 C65        #>  7     1     1 M     V         0  21.5 C15        #>  8     1     1 M     G         0 127.  C65        #>  9     1     1 M     I         0  10.1 C0         #> 10     1     1 M     F         0  28.5 C25        #> 11     1     1 M     Y         0  35.2 C35        #> 12     1     1 M     C         0 196.  C65        #> 13     1     1 M     H         0  86.3 C65        #> 14     1     1 M     Q         0 101.  C65        #> 15     1     1 M     N         0 141.  C65        #> 16     1     1 M     K         0  94.5 C65        #> 17     1     1 M     D         0 160.  C65        #> 18     1     1 M     E         0 126.  C65        #> 19     1     1 M     M         0   0   C0         #> 20     1     1 M     W         0  66.6 C65         # Parameter `mode` gives you flexibility on how to combine `poi` and `sub`. agvgd(alignment = alignment_ATM, poi = 3:4, sub = c('A', 'V')) #> # A tibble: 2 × 7 #>     res   poi ref   sub      gv    gd prediction #>   <int> <int> <chr> <chr> <dbl> <dbl> <chr>      #> 1     2     3 S     A      87.4  65.6 C0         #> 2     3     4 L     V      31.8   0   C0          # Use 'expand_grid' for all combinations. agvgd(alignment = alignment_ATM, poi = 3:4, sub = c('A', 'V'), mode = 'expand_grid') #> # A tibble: 4 × 7 #>     res   poi ref   sub      gv    gd prediction #>   <int> <int> <chr> <chr> <dbl> <dbl> <chr>      #> 1     2     3 S     A      87.4  65.6 C0         #> 2     2     3 S     V      87.4  82.7 C15        #> 3     3     4 L     A      31.8  64.4 C25        #> 4     3     4 L     V      31.8   0   C0"},{"path":"https://maialab.org/agvgd/reference/alignment_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-bundled alignments — alignment_file","title":"Pre-bundled alignments — alignment_file","text":"function returns either data frame pre-bundled alignments parameter gene missing (default behaviour), file name alignment supplied gene name.","code":""},{"path":"https://maialab.org/agvgd/reference/alignment_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-bundled alignments — alignment_file","text":"","code":"alignment_file(gene)"},{"path":"https://maialab.org/agvgd/reference/alignment_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-bundled alignments — alignment_file","text":"gene gene name one pre-bundled alignments. Run alignment_file() list genes available.","code":""},{"path":"https://maialab.org/agvgd/reference/alignment_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-bundled alignments — alignment_file","text":"Either data frame pre-bundled alignments parameter geneis missing (default behaviour), file name alignment supplied gene name.","code":""},{"path":"https://maialab.org/agvgd/reference/alignment_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pre-bundled alignments — alignment_file","text":"","code":"# List pre-bundled alignment file names and associated genes alignment_file() #> # A tibble: 12 × 2 #>    gene  file                       #>    <chr> <chr>                      #>  1 ATM   ATM4_Spur.fasta            #>  2 BRCA1 BRCA1_Align_Pufferfish.txt #>  3 BRCA2 BRCA2_Puff.fasta           #>  4 CHEK2 CHEK2_June_2010.fasta      #>  5 MRE11 MRE11_all.fa               #>  6 MSH6  MSH6_Align_2010a.fa        #>  7 NBN   NBN_all.fa                 #>  8 PALB2 PALB2.fa                   #>  9 PMS2  PMS2_Align_2010a.fa        #> 10 RAD50 RAD50_all.fa               #> 11 RAD51 RAD51.fa                   #> 12 XRCC2 XRCC2_Tadh.fa               # Retrieve the file name of an alignment alignment_file(\"BRCA1\") #> [1] \"BRCA1_Align_Pufferfish.txt\"  # You may get the full path to an alignment file with `system.file()` system.file(\"extdata\", alignment_file(\"BRCA1\"), package = \"agvgd\") #> [1] \"/home/runner/work/_temp/Library/agvgd/extdata/BRCA1_Align_Pufferfish.txt\""},{"path":"https://maialab.org/agvgd/reference/amino_acids.html","id":null,"dir":"Reference","previous_headings":"","what":"The 20 standard amino acids — amino_acids","title":"The 20 standard amino acids — amino_acids","text":"20 amino acids encoded directly codons universal genetic code.","code":""},{"path":"https://maialab.org/agvgd/reference/amino_acids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The 20 standard amino acids — amino_acids","text":"","code":"amino_acids(code = c(\"one_letter\", \"three_letter\"))"},{"path":"https://maialab.org/agvgd/reference/amino_acids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The 20 standard amino acids — amino_acids","text":"code type amino acid symbol returned, one-letter (`one_letter`) three-letter (`three_letter`) codes.","code":""},{"path":"https://maialab.org/agvgd/reference/amino_acids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The 20 standard amino acids — amino_acids","text":"character vector 20 standard amino acids.","code":""},{"path":"https://maialab.org/agvgd/reference/amino_acids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The 20 standard amino acids — amino_acids","text":"","code":"# By default `amino_acids` returns one-letter symbols amino_acids() #>  [1] \"S\" \"R\" \"L\" \"P\" \"T\" \"A\" \"V\" \"G\" \"I\" \"F\" \"Y\" \"C\" \"H\" \"Q\" \"N\" \"K\" \"D\" \"E\" \"M\" #> [20] \"W\"  # Use code = 'three_letter' instead for three-letter symbols amino_acids(code = 'three_letter') #>  [1] \"Ser\" \"Arg\" \"Leu\" \"Pro\" \"Thr\" \"Ala\" \"Val\" \"Gly\" \"Ile\" \"Phe\" \"Tyr\" \"Cys\" #> [13] \"His\" \"Gln\" \"Asn\" \"Lys\" \"Asp\" \"Glu\" \"Met\" \"Trp\""},{"path":"https://maialab.org/agvgd/reference/cpv_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine CPV ranges — cpv_ranges","title":"Determine CPV ranges — cpv_ranges","text":"function determines range (minimum maximum) values three amino acid side chain property values --- composition, polarity molecular volume --- amino acids alignment position interest. alignment passed alignment must already focused alignment three columns whose second column position interest.","code":""},{"path":"https://maialab.org/agvgd/reference/cpv_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine CPV ranges — cpv_ranges","text":"","code":"cpv_ranges(alignment, exclude = c(\"-\", \"X\", NA_character_))"},{"path":"https://maialab.org/agvgd/reference/cpv_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine CPV ranges — cpv_ranges","text":"alignment character matrix alignment object obtained read_alignment(). Rows expected sequences single characters (protein residues), columns alignment positions. first row must reference sequence, .e. sequence whose substitutions evaluated . exclude vector character values ignored collecting amino acids position interest.","code":""},{"path":"https://maialab.org/agvgd/reference/cpv_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine CPV ranges — cpv_ranges","text":"tibble one single row, six variables, .e., minimum maximum values composition (c_minand c_max), polarity (p_min p_max) molecular volume (v_minand v_max).","code":""},{"path":[]},{"path":"https://maialab.org/agvgd/reference/cpv_ranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine CPV ranges — cpv_ranges","text":"","code":"# You need to first focus the alignment around the position of interest. The # position of interest is position 4 in the example below. After subsetting # the alignment, it becomes position 2. alignment <- read_alignment('ATM')  alignment[, 3:5] #> Hsap_ATM_AAB65827.1  1 SLV #> Mmus_ATM_NP_031525.2 1 SLA #> Sscr_ATM_AAT01608.1  1 SLA #> Mdom_ATM_IARC        1 SLA #> Ggal_ATM_edited      1 SLV #> Xlae_ATM_AAT72929.1  1 SLA #> Drer_ATM_IARC_v2     1 SLA #> Bflo_ATM_IARC        1 DLL #> Spur_ATM_ABY60856.1  1 EVL  cpv_ranges(alignment[, 3:5]) #> # A tibble: 1 × 6 #>   c_min c_max p_min p_max v_min v_max #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1     0     0   4.9   5.9    84   111  # If at the position of interest there are symbols other than amino acid # symbols, e.g. gaps (\"-\"), then these are ignored and the calculated ranges # are based only on the observed amino acids. alignment[, 270:272] #> Hsap_ATM_AAB65827.1  1 QHR #> Mmus_ATM_NP_031525.2 1 QHR #> Sscr_ATM_AAT01608.1  1 QHR #> Mdom_ATM_IARC        1 QQR #> Ggal_ATM_edited      1 QYR #> Xlae_ATM_AAT72929.1  1 MQR #> Drer_ATM_IARC_v2     1 GMR #> Bflo_ATM_IARC        1 N-R #> Spur_ATM_ABY60856.1  1 S-N  cpv_ranges(alignment[, 270:272]) #> # A tibble: 1 × 6 #>   c_min c_max p_min p_max v_min v_max #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1     0  0.89   5.7  10.5    85   136"},{"path":"https://maialab.org/agvgd/reference/dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Deviation function — dev","title":"Deviation function — dev","text":"function calculates deviation sense Grantham deviation introduced Tavtigian et al. (2006). Essentially, x lies within range [min, max], dev() returns 0. x either min, max, dev() returns absolute difference x min max, respectively.  Inputs recycled sense vctrs::vec_recycle().","code":""},{"path":"https://maialab.org/agvgd/reference/dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deviation function — dev","text":"","code":"dev(x, min, max)"},{"path":"https://maialab.org/agvgd/reference/dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deviation function — dev","text":"x numeric vector. min numeric vector. max numeric vector.","code":""},{"path":"https://maialab.org/agvgd/reference/dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deviation function — dev","text":"numeric vector deviations.","code":""},{"path":"https://maialab.org/agvgd/reference/dev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deviation function — dev","text":"plot showcasing dev() min = -4 max = 3:","code":"x <- -10:10; min <- -4; max <- 3 plot(x, y = dev(x, min, max), type = 'l', xlab = 'x', ylab = 'deviation')"},{"path":[]},{"path":"https://maialab.org/agvgd/reference/dev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deviation function — dev","text":"","code":"# `dev()` returns absolute differences from either min or max (whichever is # closest). dev(10, min = -4, max = 4) #> [1] 6 dev(-10, min = -4, max = 4) #> [1] 6  # `x` can be a vector dev(-10:10, min = -4, max = 4) #>  [1] 6 5 4 3 2 1 0 0 0 0 0 0 0 0 0 1 2 3 4 5 6  # `min` and `max` can also be vectors, they will be recycled dev(-10:10, min = -4:16, max = 4:24) #>  [1] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6  # If `x` contains `NA` values, then `dev()` will return `NA` for # those cases dev(c(10, NA), min = -4, max = 4) #> [1]  6 NA  # For each calculation of deviation, only either `min` or `max` is used. If # the unused parameter is `NA` it won't affect the calculation: dev(c(10, 3), min = c(NA, -4), max = 4) #> [1] 6 0 dev(c(10, -5), min = -4, max = c(4, NA)) #> [1] 6 1"},{"path":"https://maialab.org/agvgd/reference/gd.html","id":null,"dir":"Reference","previous_headings":"","what":"Grantham deviation — gd","title":"Grantham deviation — gd","text":"function calculates Grantham deviation (\\(\\mathrm{gd}\\)): $$\\mathrm{gd} = \\rho \\left((\\alpha\\ \\mathrm{dev}^2(c_x, c_{min}, c_{max}) + \\beta\\ \\mathrm{dev}^2(p_x, p_{min}, p_{max}) + \\gamma\\ \\mathrm{dev}^2(v_x, v_{min}, v_{max})\\right)^\\frac{1}{2}$$ \\(c_x\\) value composition \\(c\\) amino acid \\(x\\), .e. atomic weight ratio hetero (noncarbon) elements end groups rings carbons side chain; \\(p_x\\) value polarity \\(p\\) amino acid \\(x\\); , \\(v_x\\) value molecular volume \\(v\\) amino acid \\(x\\). \\(c_x\\), \\(p_x\\) \\(v_x\\) looked grantham::amino_acids_properties based amino acid identities passed x. function \\(\\mathrm{dev}\\) implemented dev(). Remaining variables equation arguments gd() hence explained Arguments section.","code":""},{"path":"https://maialab.org/agvgd/reference/gd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grantham deviation — gd","text":"","code":"gd(   x,   c_min,   c_max,   p_min,   p_max,   v_min,   v_max,   alpha = 1.833,   beta = 0.1018,   gamma = 0.000399,   rho = 50.723 )"},{"path":"https://maialab.org/agvgd/reference/gd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grantham deviation — gd","text":"x character vector one-letter amino acid codes, indicating missense substitutions. c_min Amino acid composition, minimum value. c_max Amino acid, composition, maximum value. p_min Amino acid polarity, minimum value. p_max Amino acid polarity, maximum value. v_min Amino acid molecular volume, maximum value. v_max Amino acid molecular volume, maximum value. alpha constant \\(\\alpha\\) Grantham's equation. square inverse mean composition property. beta constant \\(\\beta\\) Grantham's equation. square inverse mean polarity property. gamma constant \\(\\gamma\\) Grantham's equation. square inverse mean molecular volume property. rho Grantham's distances reported Table 2, Science (1974). 185(4154): 862--4 R. Grantham, scaled factor (named \\(\\rho\\)) mean value distances 100. rho parameter allows factor \\(\\rho\\) changed. default \\(\\rho=50.723\\), value used Grantham. value originally mentioned caption Table 2 aforementioned paper.","code":""},{"path":"https://maialab.org/agvgd/reference/gd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grantham deviation — gd","text":"numeric vector Grantham deviations. deviation corresponds one amino acids indicated x.","code":""},{"path":[]},{"path":"https://maialab.org/agvgd/reference/gd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grantham deviation — gd","text":"","code":"gd('S', c_min = 0.39, c_max = 0.74, p_min =4.9, p_max =8.6, v_min = 3, v_max = 32.5) #> [1] 47.69654"},{"path":"https://maialab.org/agvgd/reference/gv.html","id":null,"dir":"Reference","previous_headings":"","what":"Grantham variation — gv","title":"Grantham variation — gv","text":"function calculates Grantham variation (\\(\\mathrm{gv}\\)): $$\\mathrm{gv} = \\rho \\left((\\alpha (c_{max}-c_{min})^2 + \\beta (p_{max}-p_{min})^2 + \\gamma (v_{max}-v_{min})^2\\right)^\\frac{1}{2}$$ minimum maximum values observed set amino acid residues alignment position interest.","code":""},{"path":"https://maialab.org/agvgd/reference/gv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grantham variation — gv","text":"","code":"gv(   c_min,   c_max,   p_min,   p_max,   v_min,   v_max,   alpha = 1.833,   beta = 0.1018,   gamma = 0.000399,   rho = 50.723 )"},{"path":"https://maialab.org/agvgd/reference/gv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grantham variation — gv","text":"c_min Amino acid composition, minimum value. c_max Amino acid, composition, maximum value. p_min Amino acid polarity, minimum value. p_max Amino acid polarity, maximum value. v_min Amino acid molecular volume, maximum value. v_max Amino acid molecular volume, maximum value. alpha constant \\(\\alpha\\) Grantham's equation. square inverse mean composition property. beta constant \\(\\beta\\) Grantham's equation. square inverse mean polarity property. gamma constant \\(\\gamma\\) Grantham's equation. square inverse mean molecular volume property. rho Grantham's distances reported Table 2, Science (1974). 185(4154): 862--4 R. Grantham, scaled factor (named \\(\\rho\\)) mean value distances 100. rho parameter allows factor \\(\\rho\\) changed. default \\(\\rho=50.723\\), value used Grantham. value originally mentioned caption Table 2 aforementioned paper.","code":""},{"path":"https://maialab.org/agvgd/reference/gv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grantham variation — gv","text":"numeric vector grantham variation values.","code":""},{"path":[]},{"path":"https://maialab.org/agvgd/reference/gv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grantham variation — gv","text":"","code":"# Example based on values from Figure 1C of Tavtigian et al. (2006), # https://doi.org/10.1136/jmg.2005.033878. gv(c_min = 0, c_max = 0, p_min = 5.7, p_max = 4.9, v_min = 132, v_max = 105) #> [1] 30.26523"},{"path":"https://maialab.org/agvgd/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://maialab.org/agvgd/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://maialab.org/agvgd/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://maialab.org/agvgd/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://maialab.org/agvgd/reference/poi_to_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an alignment position to residue position — poi_to_res","title":"Convert an alignment position to residue position — poi_to_res","text":"function converts alignment position position frame reference protein sequence, .e., positions amino acids first sequence alignment.","code":""},{"path":"https://maialab.org/agvgd/reference/poi_to_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an alignment position to residue position — poi_to_res","text":"","code":"poi_to_res(alignment, poi)"},{"path":"https://maialab.org/agvgd/reference/poi_to_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an alignment position to residue position — poi_to_res","text":"alignment alignment. poi alignment position.","code":""},{"path":"https://maialab.org/agvgd/reference/poi_to_res.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an alignment position to residue position — poi_to_res","text":"integer vector positions amino acid residues   reference sequence.","code":""},{"path":"https://maialab.org/agvgd/reference/poi_to_res.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an alignment position to residue position — poi_to_res","text":"","code":"align_ATM <- read_alignment('ATM') align_ATM[, 1:5] #> Hsap_ATM_AAB65827.1  1 M-SLV #> Mmus_ATM_NP_031525.2 1 M-SLA #> Sscr_ATM_AAT01608.1  1 M-SLA #> Mdom_ATM_IARC        1 M-SLA #> Ggal_ATM_edited      1 M-SLV #> Xlae_ATM_AAT72929.1  1 M-SLA #> Drer_ATM_IARC_v2     1 M-SLA #> Bflo_ATM_IARC        1 MTDLL #> Spur_ATM_ABY60856.1  1 MAEVL  # Convert the positions of the first five alignment positions to residue positions poi_to_res(align_ATM, 1:5) #> [1]  1 NA  2  3  4"},{"path":"https://maialab.org/agvgd/reference/read_agvgdweb_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in AGVGD Web Results — read_agvgdweb_results","title":"Read in AGVGD Web Results — read_agvgdweb_results","text":"function imports R results generated AGVGD Web application http://agvgd.hci.utah.edu/.","code":""},{"path":"https://maialab.org/agvgd/reference/read_agvgdweb_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in AGVGD Web Results — read_agvgdweb_results","text":"","code":"read_agvgdweb_results(file = stop(\"`file` is missing\"), alignment = NULL)"},{"path":"https://maialab.org/agvgd/reference/read_agvgdweb_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in AGVGD Web Results — read_agvgdweb_results","text":"file file path results output AGVGD Web app. alignment character matrix alignment object obtained read_alignment(). Rows expected sequences single characters (protein residues), columns alignment positions. first row must reference sequence, .e. sequence whose substitutions evaluated . parameter can left NULL. supplied column poi output filled (default NA).","code":""},{"path":"https://maialab.org/agvgd/reference/read_agvgdweb_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in AGVGD Web Results — read_agvgdweb_results","text":"tibble seven columns: res Position amino acid residue reference protein (first sequence alignment). position corresponds poi minus gaps alignment. poi Position interest, .e. alignment position amino acid substitution assessed. information provided AGVGD Web app column always NA; keep though coherence output agvgd(). ref Reference amino acid, .e. amino acid first sequence alignment, position interest. sub Amino acid substitution assessed. gv Grantham variation score. gd Grantham difference score. prediction Predicted effect amino acid substitution. classed C0, C15, C25, C35, C45, C55, C65, C65 likely interfere function C0 least likely.","code":""},{"path":"https://maialab.org/agvgd/reference/read_alignment.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a protein sequence multiple alignment — read_alignment","title":"Read a protein sequence multiple alignment — read_alignment","text":"Reads protein sequence multiple alignment (PSMA) either set pre-bundled alignments, gene name, Multi-FASTA file.","code":""},{"path":"https://maialab.org/agvgd/reference/read_alignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a protein sequence multiple alignment — read_alignment","text":"","code":"read_alignment(   gene = c(\"ATM\", \"BRCA1\", \"BRCA2\", \"CHEK2\", \"MRE11\", \"MSH6\", \"NBN\", \"PALB2\", \"PMS2\",     \"RAD50\", \"RAD51\", \"XRCC2\"),   file = NULL )"},{"path":"https://maialab.org/agvgd/reference/read_alignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a protein sequence multiple alignment — read_alignment","text":"gene gene name alignment provided package. Use function alignment_file() list pre-bundled alignments. file path Multi-FASTA file. argument given, takes precedence gene parameter.","code":""},{"path":"https://maialab.org/agvgd/reference/read_alignment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a protein sequence multiple alignment — read_alignment","text":"alignment object; essentially, character matrix, whose elements protein residues one-letter notation. Rows sequences columns alignment positions.","code":""},{"path":"https://maialab.org/agvgd/reference/read_alignment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a protein sequence multiple alignment — read_alignment","text":"","code":"# Read in the alignment for the gene XRCC2 read_alignment('XRCC2') #> Hsap_XRCC2   1 MCSAFHRAESGTELLARLEGRSSLKEIEPNLFADEDS--PVHGDILEFHG #> Mmul_XRCC2   1 MCSDFHRAESGTELLARLEGRSSLKEIEPNLFADEDS--PVHGDILEFHG #> Mmus_XRCC2   1 MCSDFRRAESGTELLARLEGRSSLKELEPNLFADEDS--PVHGDIFEFHG #> Cfam_XRCC2   1 MCSDFHRAESGTELLARLEGRSSLKEIEPYLFTDEVS--SVHGDILEFHG #> Lafr_XRCC2   1 MCSDFHRAESGTELLARLEGRSSLKVIEPYLFADEES--PVHGDILEFHG #> Mdom_XRCC2   1 MSGDFRRAESGTELLARLEGRSSLKDIEPFLFADEGS--PIHGDILEFHG #> Oana_XRCC2   1 MSGHFRRAESGTELLARLEGRSSLKTLEPFLFADEGF--PIHGDILEFHG #> Ggal_XRCC2   1 MGDAFRRAESGTQLLARLEGRSSLKNLEPNLFAEEGS--PVHGDVIEFHG #> Acar_XRCC2   1 MTGRFGEAESGAQLLARLEGRGSLKDLEPCLFAEEGY--PIPGDIIECYG #> Xtro_XRCC2   1 MSDGSRQAESGTQLLARLEGRASLSNLEPLLFADEGC--PVHGEITEFYG #> Drer_XRCC2   1 MTARVRMAENGAQLVSRLEGRQSLKDIEPNIFPADGG--PGQGDVVEFHG #> Bflo_XRCC2   1 MXXXXXXXXXXXXLLARLGSRPSLVQLETALFRADMG--PKSGDAIELYG #> Spur_XRCC2   1 MXXXXXXXXXXXXLFARLGEKPSLARLNPKLIPPGLE--PRPGDVVEIYG #> Nvec_XRCC2   1 MXXXXXXXXXXXKLFSRLGSKQSLDGLDKKLFVDIPD-GIKAGDVVEFYG #> Tadh_XRCC2   1 M-----ASESAAKLFARLGSRQTVIGMEDRLFSKLQFNGLTCGDVVEFYG  #>  #> Hsap_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLEVEVLFIDTDYHFDMLRLV #> Mmul_XRCC2  51 SEGTGKTEMLYHLTARCILPKS-----EGGLEVEVLFIDTDYHFDMLRLV #> Mmus_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLQIEVLFIDTDYHFDMLRLV #> Cfam_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLEVEVLFIDTDYHFDMLRLV #> Lafr_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLEIEVLFIDTDHHFDMLRLV #> Mdom_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLEVEVLFIDTDYHFDMLRLV #> Oana_XRCC2  51 QEGTGKTEMLYHLVARCILPRS-----EGGLEEEVLFVDTDYHFDMLRLI #> Ggal_XRCC2  51 PEGTGKTEMLYHLIARCIIPKS-----GGGLEVEVMFIDTDYHFDMLRLV #> Acar_XRCC2  51 PEGTGKTEMFYHLIARCILPKS-----RGGLEVGLLFIDTDFHFDMLRLV #> Xtro_XRCC2  51 PEGTGKTEMLCHLISRCILPKS-----DGGLQVEVIYIDTDYHFDMLRLV #> Drer_XRCC2  51 MEGSGKTETLYHLITRCITPTH-----SGGLEVGVVFIDTDYHFDMLRFV #> Bflo_XRCC2  51 PEGTAKTEMLLHLTARCILPAS-----VGGLEAGVVFIDNDYHFDILRLV #> Spur_XRCC2  51 NSGSGKTELLLNLAAMCILPERWKTIDIGGLGTSVVFIDTDHQFSMLRLF #> Nvec_XRCC2  51 KEGCGKTEMLLHLAANCIMPRSWHELYLGGKGVSVIFIDTDYHFQILRLI #> Tadh_XRCC2  51 SEGCGKTEMLLHLMIKCIMPDNFRGIAMNGRSMSVVYIDCDYHFNLLRLM  #>  #> Hsap_XRCC2 101 TILEHRL------SQSS--------EEIIKYCLGRFFLVYCSSSTHLLLT #> Mmul_XRCC2 101 TVLEHRL------SQSS--------EEIIKYCLGRFFLVYCSSSTHLLLT #> Mmus_XRCC2 101 TVLEHRL------SQSS--------EEAMKLCLARLFLAYCSSSMQLLLT #> Cfam_XRCC2 101 TILEHRL------SQSS--------EEMVKHCLGRLFLVNCNSSTQLLLT #> Lafr_XRCC2 101 TILEHRL------SQSS--------EEIIKSCLGRFFLVYCSSSSQLLLT #> Mdom_XRCC2 101 TILERRL------SQST--------EDIIKHCLGRFFLVNCSSSNQLLIT #> Oana_XRCC2 101 TILEHRL------SQSS--------EEAIKLCLGRLFLVYCSSSVQLLLT #> Ggal_XRCC2 101 TILEHRL------EQST--------EEMMKRCLGRLFLVNCNSSTQLLLT #> Acar_XRCC2 101 TILEHRS------SQGT--------EDMIKQCLGRFFLVNCSSSSQLLLT #> Xtro_XRCC2 101 TILEHRL------AQNT--------EEAVKQCLGRFFLLYCNSSVQLLLT #> Drer_XRCC2 101 SILEGRL------AEDSKTGSENEAEETVRSCLCRLSVVHCNSSVQLLLT #> Bflo_XRCC2 101 TVLEGRL------DTTD--------EDRMKQCLGRLYIVRCNSSEQLVIT #> Spur_XRCC2 101 ALLERKV------AEAIDNRTKRK-ETFLKACLKKLYMVKIATSNQLVIT #> Nvec_XRCC2 101 AIMEYRT------AESE---------TLIKQCLTRLFIVRCNSSVELLAT #> Tadh_XRCC2 101 SILEQRYCKACQGSNATMVKHS---EEFIRKCLERFYIIRCDTIHQLITS  #>  #> Hsap_XRCC2 151 LYSLESMFCSHPSLCLLILDSLSAFYWIDRVNGGESVNLQESTLRKCSQC #> Mmul_XRCC2 151 LYSLESMFCSHPSLCLLILDSLSAFYWIDRVNGGESVNLQESTLRKCSQC #> Mmus_XRCC2 151 LHSLEALLCSRPSLCLLIVDSLSSFYWIDRVSGGESVALQESTLQKCSQL #> Cfam_XRCC2 151 LYSLETVVCSHPSLCLLILDSLSAFYWIDRVNGGESVNLQEATLKKCAQF #> Lafr_XRCC2 151 LYSLESMFCSHPSLCLLILDSLSAFYWIDRANGGESVNLQESTLKKCSQF #> Mdom_XRCC2 151 LYSLETMFCSHPSLCLFILDSLSAFYWIDRVNGGESLTLQEINLKKCSKF #> Oana_XRCC2 151 LHSLETMFCSRPSLSLLMVDSLSAFYWIDRANGGESLTQQEATLRKCTRL #> Ggal_XRCC2 151 LYSLENMFCTHPSLCLLILDSISAFYWIDRSNGGESLNSQEMNLKKCANF #> Acar_XRCC2 151 LYSLENMFCSHPSLCLLIIDSISAFYWIDRVNGGESISLQEANLRRCAQF #> Xtro_XRCC2 151 LYSLENMFCSHPSLCLLIIDSISAFYWIDRNNGGETFAKQETNLRKCTEL #> Drer_XRCC2 151 LHYLENTFSSQPTLGLLVIDSISAFYWTDRFNGGESASCQEANLRKCAEL #> Bflo_XRCC2 151 LHSLEHIIASSSEVALLIVDSISAFYWLDR-STDDSMSGQELNQRRCVDI #> Spur_XRCC2 151 LHSLESLLASQCDISVLMMDSVSAFYWVDRMKGDG-AHRQGVNQKLAFGA #> Nvec_XRCC2 151 LLSMEQLIICKPEICVMMIDSLSAFYWVDRSSGGESLQDQQENIRKTTSV #> Tadh_XRCC2 151 LHLLEYSISSNPDIGIMLIDGIGSFYWQDKFSSSS-----GVDQ--LCKI  #>  #> Hsap_XRCC2 201 LEKLVNDYRLVLFATTQTIMQKAS------------SSSEEPSHASRRLC #> Mmul_XRCC2 201 LEKLVNDYRLVLFATTQTIMQKAL------------NSSEEPSPASRRLR #> Mmus_XRCC2 201 LERLVTEYRLLLFATTQSLMQKGS------------DSADGPSSS-KHPC #> Cfam_XRCC2 201 LEKLVNEYRLVLFATTQSIMQKTS------------NWTEGPSSAFNHPK #> Lafr_XRCC2 201 LERLVNEYRLILFASTQSIMQKPS------------NSTEGPSSAFKQPS #> Mdom_XRCC2 201 LEKLVKEYHLVLFATTQTIMQKNS------------NSTERSSSL-KLPC #> Oana_XRCC2 201 LEKLVKEYHLVLLATTQAIMQRSS------------KASENSASA----W #> Ggal_XRCC2 201 LEKLVREHHLVLFATTQSIMQKST------------NSAEGF-FPLKLQS #> Acar_XRCC2 201 LEKLVREHHLVLFATTQAIMQKSL------------NAIE---SSRKRNS #> Xtro_XRCC2 201 LHKLLKEYQLVLFASTQAIMQKSP------------NEAGEGPSRSGKQN #> Drer_XRCC2 201 LDRLRRNYGIVIFATTHAIMRNFGSDLG--VS-DVHGSSSSSSSRRWRSA #> Bflo_XRCC2 201 LSRYLSDYGIVLIATKQALFGHKSRKNQ--NE-D-----TTLSPKLEKTK #> Spur_XRCC2 201 LSRLVEDYHLVLFASKAALVTKQPQN-EFSLRLDSTGETDHSNRTSTTSV #> Nvec_XRCC2 201 LSRFSRENHLVIFTTVHAIFG---NN----TK----------E--M---- #> Tadh_XRCC2 201 VKYLCDEHNLIVLATKSAIRKQFENSRL--AN-K----SRLRNDIASNYN  #>  #> Hsap_XRCC2 251 DVDIDY-RPYLCKAWQQLVKHRMFFSKQDDS----QS-SNQFSLVSRCLK #> Mmul_XRCC2 251 DVDVDY-RPYLCKAWQQLVKHRIFFSKQDDS----QS-SNQFSLVSRCLK #> Mmus_XRCC2 251 DGDMGY-RAYLCKAWQRVVKHRVIFSRDDEA----K--SSRFSLVSRHLK #> Cfam_XRCC2 251 EADADY-RPYLCKEWQQVVKHRIFFSKQEDF----K---TQFSLVSRHLK #> Lafr_XRCC2 251 NEDIDY-RPYLCKAWQQMVKHRIFFSKQDDS----KR-NNQFSLVSRHLK #> Mdom_XRCC2 251 EVDIDY-RPYLCKSWQQMVNHRIFFSRNSES----S---NQMSVVSYHLK #> Oana_XRCC2 251 EGDGDY-RPYLCKSWQQLVNHRLFFSKQDNG----EDPKQMFSFTSCHLK #> Ggal_XRCC2 251 EIDADY-RPYLCKSWQQMVTHRIFFSKQFNS----GN-STGFTLVSCHLK #> Acar_XRCC2 251 DGDVDY-RPYLCKSWQQMITHRIFFSKQCNP----DN-TQSFSITACHIR #> Xtro_XRCC2 251 SSSMDY-KPYLCKLWQQGATHRVLFSKELRN----N--EQIYSITSCHLK #> Drer_XRCC2 251 DCASDFDRPYLCRAWQRIVTHRVLFTKSHAP----KDHKQILSTACTSIL #> Bflo_XRCC2 251 VENVEH-YEYMCHAWQNLIKYRYVFSRATKKDISIEENGKDISSFSATMI #> Spur_XRCC2 251 KLSTDH-HEFMSQEWTKLVTHRMILERHDHMTS--DGPNSSYLSVLKHKA #> Nvec_XRCC2 251 ---MRN-QDYLCKAWQQSVKYRYMFTKQTEYDGKASQFCSVYV-VQRTSP #> Tadh_XRCC2 251 STHSKH-MEYMPNVWRKLVKYRYILSKLDSELSGANSYSATYS-VVLEHP  #>  #> Hsap_XRCC2 301 SNSLKKHFFIIGESGVEFC------- #> Mmul_XRCC2 301 SNSFKKHFFIIGESGVEFC------- #> Mmus_XRCC2 301 SNSLKKHSFMVRESGVEFC------- #> Cfam_XRCC2 301 SNSLKKHTFVIGENGIEFC------- #> Lafr_XRCC2 301 SNSLKKHFFIIGESGVEFC------- #> Mdom_XRCC2 301 SNNLIKRLFSIRESGVHFC------- #> Oana_XRCC2 301 SNRFAKRFFSIGEGGVQF-------- #> Ggal_XRCC2 301 KKHVAKRSFSIAECGVQFFQ------ #> Acar_XRCC2 301 NNSVIKRSFSILENGVQF-------- #> Xtro_XRCC2 301 TRNGVKRSFRIAESGVQFL------- #> Drer_XRCC2 301 TKGVKKCSFCVVEDGIKFICDK---- #> Bflo_XRCC2 301 KPVEHKCEFTVADRGISFMGSLYNQC #> Spur_XRCC2 301 SGNMYSCQFIIDQQGIRV-------- #> Nvec_XRCC2 301 KTESKSNRFLIEEHGVVFIS------ #> Tadh_XRCC2 301 SSIESAERFIVSEEGVVFI-------  # Also read in the alignment for the gene XRCC2, but now by specifying # directly the path to the file. path <- system.file(\"extdata\", alignment_file(\"XRCC2\"), package = \"agvgd\") read_alignment(file = path) #> Hsap_XRCC2   1 MCSAFHRAESGTELLARLEGRSSLKEIEPNLFADEDS--PVHGDILEFHG #> Mmul_XRCC2   1 MCSDFHRAESGTELLARLEGRSSLKEIEPNLFADEDS--PVHGDILEFHG #> Mmus_XRCC2   1 MCSDFRRAESGTELLARLEGRSSLKELEPNLFADEDS--PVHGDIFEFHG #> Cfam_XRCC2   1 MCSDFHRAESGTELLARLEGRSSLKEIEPYLFTDEVS--SVHGDILEFHG #> Lafr_XRCC2   1 MCSDFHRAESGTELLARLEGRSSLKVIEPYLFADEES--PVHGDILEFHG #> Mdom_XRCC2   1 MSGDFRRAESGTELLARLEGRSSLKDIEPFLFADEGS--PIHGDILEFHG #> Oana_XRCC2   1 MSGHFRRAESGTELLARLEGRSSLKTLEPFLFADEGF--PIHGDILEFHG #> Ggal_XRCC2   1 MGDAFRRAESGTQLLARLEGRSSLKNLEPNLFAEEGS--PVHGDVIEFHG #> Acar_XRCC2   1 MTGRFGEAESGAQLLARLEGRGSLKDLEPCLFAEEGY--PIPGDIIECYG #> Xtro_XRCC2   1 MSDGSRQAESGTQLLARLEGRASLSNLEPLLFADEGC--PVHGEITEFYG #> Drer_XRCC2   1 MTARVRMAENGAQLVSRLEGRQSLKDIEPNIFPADGG--PGQGDVVEFHG #> Bflo_XRCC2   1 MXXXXXXXXXXXXLLARLGSRPSLVQLETALFRADMG--PKSGDAIELYG #> Spur_XRCC2   1 MXXXXXXXXXXXXLFARLGEKPSLARLNPKLIPPGLE--PRPGDVVEIYG #> Nvec_XRCC2   1 MXXXXXXXXXXXKLFSRLGSKQSLDGLDKKLFVDIPD-GIKAGDVVEFYG #> Tadh_XRCC2   1 M-----ASESAAKLFARLGSRQTVIGMEDRLFSKLQFNGLTCGDVVEFYG  #>  #> Hsap_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLEVEVLFIDTDYHFDMLRLV #> Mmul_XRCC2  51 SEGTGKTEMLYHLTARCILPKS-----EGGLEVEVLFIDTDYHFDMLRLV #> Mmus_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLQIEVLFIDTDYHFDMLRLV #> Cfam_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLEVEVLFIDTDYHFDMLRLV #> Lafr_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLEIEVLFIDTDHHFDMLRLV #> Mdom_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLEVEVLFIDTDYHFDMLRLV #> Oana_XRCC2  51 QEGTGKTEMLYHLVARCILPRS-----EGGLEEEVLFVDTDYHFDMLRLI #> Ggal_XRCC2  51 PEGTGKTEMLYHLIARCIIPKS-----GGGLEVEVMFIDTDYHFDMLRLV #> Acar_XRCC2  51 PEGTGKTEMFYHLIARCILPKS-----RGGLEVGLLFIDTDFHFDMLRLV #> Xtro_XRCC2  51 PEGTGKTEMLCHLISRCILPKS-----DGGLQVEVIYIDTDYHFDMLRLV #> Drer_XRCC2  51 MEGSGKTETLYHLITRCITPTH-----SGGLEVGVVFIDTDYHFDMLRFV #> Bflo_XRCC2  51 PEGTAKTEMLLHLTARCILPAS-----VGGLEAGVVFIDNDYHFDILRLV #> Spur_XRCC2  51 NSGSGKTELLLNLAAMCILPERWKTIDIGGLGTSVVFIDTDHQFSMLRLF #> Nvec_XRCC2  51 KEGCGKTEMLLHLAANCIMPRSWHELYLGGKGVSVIFIDTDYHFQILRLI #> Tadh_XRCC2  51 SEGCGKTEMLLHLMIKCIMPDNFRGIAMNGRSMSVVYIDCDYHFNLLRLM  #>  #> Hsap_XRCC2 101 TILEHRL------SQSS--------EEIIKYCLGRFFLVYCSSSTHLLLT #> Mmul_XRCC2 101 TVLEHRL------SQSS--------EEIIKYCLGRFFLVYCSSSTHLLLT #> Mmus_XRCC2 101 TVLEHRL------SQSS--------EEAMKLCLARLFLAYCSSSMQLLLT #> Cfam_XRCC2 101 TILEHRL------SQSS--------EEMVKHCLGRLFLVNCNSSTQLLLT #> Lafr_XRCC2 101 TILEHRL------SQSS--------EEIIKSCLGRFFLVYCSSSSQLLLT #> Mdom_XRCC2 101 TILERRL------SQST--------EDIIKHCLGRFFLVNCSSSNQLLIT #> Oana_XRCC2 101 TILEHRL------SQSS--------EEAIKLCLGRLFLVYCSSSVQLLLT #> Ggal_XRCC2 101 TILEHRL------EQST--------EEMMKRCLGRLFLVNCNSSTQLLLT #> Acar_XRCC2 101 TILEHRS------SQGT--------EDMIKQCLGRFFLVNCSSSSQLLLT #> Xtro_XRCC2 101 TILEHRL------AQNT--------EEAVKQCLGRFFLLYCNSSVQLLLT #> Drer_XRCC2 101 SILEGRL------AEDSKTGSENEAEETVRSCLCRLSVVHCNSSVQLLLT #> Bflo_XRCC2 101 TVLEGRL------DTTD--------EDRMKQCLGRLYIVRCNSSEQLVIT #> Spur_XRCC2 101 ALLERKV------AEAIDNRTKRK-ETFLKACLKKLYMVKIATSNQLVIT #> Nvec_XRCC2 101 AIMEYRT------AESE---------TLIKQCLTRLFIVRCNSSVELLAT #> Tadh_XRCC2 101 SILEQRYCKACQGSNATMVKHS---EEFIRKCLERFYIIRCDTIHQLITS  #>  #> Hsap_XRCC2 151 LYSLESMFCSHPSLCLLILDSLSAFYWIDRVNGGESVNLQESTLRKCSQC #> Mmul_XRCC2 151 LYSLESMFCSHPSLCLLILDSLSAFYWIDRVNGGESVNLQESTLRKCSQC #> Mmus_XRCC2 151 LHSLEALLCSRPSLCLLIVDSLSSFYWIDRVSGGESVALQESTLQKCSQL #> Cfam_XRCC2 151 LYSLETVVCSHPSLCLLILDSLSAFYWIDRVNGGESVNLQEATLKKCAQF #> Lafr_XRCC2 151 LYSLESMFCSHPSLCLLILDSLSAFYWIDRANGGESVNLQESTLKKCSQF #> Mdom_XRCC2 151 LYSLETMFCSHPSLCLFILDSLSAFYWIDRVNGGESLTLQEINLKKCSKF #> Oana_XRCC2 151 LHSLETMFCSRPSLSLLMVDSLSAFYWIDRANGGESLTQQEATLRKCTRL #> Ggal_XRCC2 151 LYSLENMFCTHPSLCLLILDSISAFYWIDRSNGGESLNSQEMNLKKCANF #> Acar_XRCC2 151 LYSLENMFCSHPSLCLLIIDSISAFYWIDRVNGGESISLQEANLRRCAQF #> Xtro_XRCC2 151 LYSLENMFCSHPSLCLLIIDSISAFYWIDRNNGGETFAKQETNLRKCTEL #> Drer_XRCC2 151 LHYLENTFSSQPTLGLLVIDSISAFYWTDRFNGGESASCQEANLRKCAEL #> Bflo_XRCC2 151 LHSLEHIIASSSEVALLIVDSISAFYWLDR-STDDSMSGQELNQRRCVDI #> Spur_XRCC2 151 LHSLESLLASQCDISVLMMDSVSAFYWVDRMKGDG-AHRQGVNQKLAFGA #> Nvec_XRCC2 151 LLSMEQLIICKPEICVMMIDSLSAFYWVDRSSGGESLQDQQENIRKTTSV #> Tadh_XRCC2 151 LHLLEYSISSNPDIGIMLIDGIGSFYWQDKFSSSS-----GVDQ--LCKI  #>  #> Hsap_XRCC2 201 LEKLVNDYRLVLFATTQTIMQKAS------------SSSEEPSHASRRLC #> Mmul_XRCC2 201 LEKLVNDYRLVLFATTQTIMQKAL------------NSSEEPSPASRRLR #> Mmus_XRCC2 201 LERLVTEYRLLLFATTQSLMQKGS------------DSADGPSSS-KHPC #> Cfam_XRCC2 201 LEKLVNEYRLVLFATTQSIMQKTS------------NWTEGPSSAFNHPK #> Lafr_XRCC2 201 LERLVNEYRLILFASTQSIMQKPS------------NSTEGPSSAFKQPS #> Mdom_XRCC2 201 LEKLVKEYHLVLFATTQTIMQKNS------------NSTERSSSL-KLPC #> Oana_XRCC2 201 LEKLVKEYHLVLLATTQAIMQRSS------------KASENSASA----W #> Ggal_XRCC2 201 LEKLVREHHLVLFATTQSIMQKST------------NSAEGF-FPLKLQS #> Acar_XRCC2 201 LEKLVREHHLVLFATTQAIMQKSL------------NAIE---SSRKRNS #> Xtro_XRCC2 201 LHKLLKEYQLVLFASTQAIMQKSP------------NEAGEGPSRSGKQN #> Drer_XRCC2 201 LDRLRRNYGIVIFATTHAIMRNFGSDLG--VS-DVHGSSSSSSSRRWRSA #> Bflo_XRCC2 201 LSRYLSDYGIVLIATKQALFGHKSRKNQ--NE-D-----TTLSPKLEKTK #> Spur_XRCC2 201 LSRLVEDYHLVLFASKAALVTKQPQN-EFSLRLDSTGETDHSNRTSTTSV #> Nvec_XRCC2 201 LSRFSRENHLVIFTTVHAIFG---NN----TK----------E--M---- #> Tadh_XRCC2 201 VKYLCDEHNLIVLATKSAIRKQFENSRL--AN-K----SRLRNDIASNYN  #>  #> Hsap_XRCC2 251 DVDIDY-RPYLCKAWQQLVKHRMFFSKQDDS----QS-SNQFSLVSRCLK #> Mmul_XRCC2 251 DVDVDY-RPYLCKAWQQLVKHRIFFSKQDDS----QS-SNQFSLVSRCLK #> Mmus_XRCC2 251 DGDMGY-RAYLCKAWQRVVKHRVIFSRDDEA----K--SSRFSLVSRHLK #> Cfam_XRCC2 251 EADADY-RPYLCKEWQQVVKHRIFFSKQEDF----K---TQFSLVSRHLK #> Lafr_XRCC2 251 NEDIDY-RPYLCKAWQQMVKHRIFFSKQDDS----KR-NNQFSLVSRHLK #> Mdom_XRCC2 251 EVDIDY-RPYLCKSWQQMVNHRIFFSRNSES----S---NQMSVVSYHLK #> Oana_XRCC2 251 EGDGDY-RPYLCKSWQQLVNHRLFFSKQDNG----EDPKQMFSFTSCHLK #> Ggal_XRCC2 251 EIDADY-RPYLCKSWQQMVTHRIFFSKQFNS----GN-STGFTLVSCHLK #> Acar_XRCC2 251 DGDVDY-RPYLCKSWQQMITHRIFFSKQCNP----DN-TQSFSITACHIR #> Xtro_XRCC2 251 SSSMDY-KPYLCKLWQQGATHRVLFSKELRN----N--EQIYSITSCHLK #> Drer_XRCC2 251 DCASDFDRPYLCRAWQRIVTHRVLFTKSHAP----KDHKQILSTACTSIL #> Bflo_XRCC2 251 VENVEH-YEYMCHAWQNLIKYRYVFSRATKKDISIEENGKDISSFSATMI #> Spur_XRCC2 251 KLSTDH-HEFMSQEWTKLVTHRMILERHDHMTS--DGPNSSYLSVLKHKA #> Nvec_XRCC2 251 ---MRN-QDYLCKAWQQSVKYRYMFTKQTEYDGKASQFCSVYV-VQRTSP #> Tadh_XRCC2 251 STHSKH-MEYMPNVWRKLVKYRYILSKLDSELSGANSYSATYS-VVLEHP  #>  #> Hsap_XRCC2 301 SNSLKKHFFIIGESGVEFC------- #> Mmul_XRCC2 301 SNSFKKHFFIIGESGVEFC------- #> Mmus_XRCC2 301 SNSLKKHSFMVRESGVEFC------- #> Cfam_XRCC2 301 SNSLKKHTFVIGENGIEFC------- #> Lafr_XRCC2 301 SNSLKKHFFIIGESGVEFC------- #> Mdom_XRCC2 301 SNNLIKRLFSIRESGVHFC------- #> Oana_XRCC2 301 SNRFAKRFFSIGEGGVQF-------- #> Ggal_XRCC2 301 KKHVAKRSFSIAECGVQFFQ------ #> Acar_XRCC2 301 NNSVIKRSFSILENGVQF-------- #> Xtro_XRCC2 301 TRNGVKRSFRIAESGVQFL------- #> Drer_XRCC2 301 TKGVKKCSFCVVEDGIKFICDK---- #> Bflo_XRCC2 301 KPVEHKCEFTVADRGISFMGSLYNQC #> Spur_XRCC2 301 SGNMYSCQFIIDQQGIRV-------- #> Nvec_XRCC2 301 KTESKSNRFLIEEHGVVFIS------ #> Tadh_XRCC2 301 SSIESAERFIVSEEGVVFI-------"},{"path":"https://maialab.org/agvgd/reference/read_substitutions.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a file with amino acid substitutions — read_substitutions","title":"Read a file with amino acid substitutions — read_substitutions","text":"function reads file amino acid substitutions. format one requested web version Align-GVGD.","code":""},{"path":"https://maialab.org/agvgd/reference/read_substitutions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a file with amino acid substitutions — read_substitutions","text":"","code":"read_substitutions(   file = stop(\"`file` must be specified\"),   amino_acid_code = c(\"one_letter\", \"three_letter\") )"},{"path":"https://maialab.org/agvgd/reference/read_substitutions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a file with amino acid substitutions — read_substitutions","text":"file path file amino acid substitutions. amino_acid_code type symbol used amino acids returned output.","code":""},{"path":"https://maialab.org/agvgd/reference/read_substitutions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a file with amino acid substitutions — read_substitutions","text":"tibble listing amino acids substitutions.","code":""},{"path":"https://maialab.org/agvgd/reference/read_substitutions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a file with amino acid substitutions — read_substitutions","text":"","code":"# \"sub.txt\" is an example file containing missense substitutions formatted # according to the requirements indicated in http://agvgd.hci.utah.edu/help.php. my_file <- system.file(\"extdata\", \"sub.txt\", package = \"agvgd\") cat(readLines(my_file), sep = \"\\n\") #> P2S #> P2R #> P2L #> P2T #> P2A #> P2V #> P2G #> P2I #> P2F #> P2Y #> P2C #> P2H #> P2Q #> P2N #> P2K #> P2D #> P2E #> P2M #> P2W #>   read_substitutions(file = my_file) #> # A tibble: 19 × 4 #>      res   poi ref   sub   #>    <int> <int> <chr> <chr> #>  1     2    NA P     S     #>  2     2    NA P     R     #>  3     2    NA P     L     #>  4     2    NA P     T     #>  5     2    NA P     A     #>  6     2    NA P     V     #>  7     2    NA P     G     #>  8     2    NA P     I     #>  9     2    NA P     F     #> 10     2    NA P     Y     #> 11     2    NA P     C     #> 12     2    NA P     H     #> 13     2    NA P     Q     #> 14     2    NA P     N     #> 15     2    NA P     K     #> 16     2    NA P     D     #> 17     2    NA P     E     #> 18     2    NA P     M     #> 19     2    NA P     W      # lee2010_sub.txt is a file containing the missense variants studied by # Lee et al. (2010): https://doi.org/10.1158/0008-5472.CAN-09-4563. read_substitutions(file = system.file(\"extdata\", \"lee2010_sub.txt\", package = \"agvgd\")) #> # A tibble: 117 × 4 #>      res   poi ref   sub   #>    <int> <int> <chr> <chr> #>  1  1647    NA N     K     #>  2  1651    NA S     F     #>  3  1652    NA M     T     #>  4  1652    NA M     I     #>  5  1653    NA V     M     #>  6  1655    NA S     F     #>  7  1656    NA G     D     #>  8  1662    NA F     S     #>  9  1663    NA M     L     #> 10  1663    NA M     K     #> # … with 107 more rows"},{"path":"https://maialab.org/agvgd/reference/res_to_poi.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a residue position to an alignment position — res_to_poi","title":"Convert a residue position to an alignment position — res_to_poi","text":"function converts residue position position frame alignment.","code":""},{"path":"https://maialab.org/agvgd/reference/res_to_poi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a residue position to an alignment position — res_to_poi","text":"","code":"res_to_poi(alignment, res)"},{"path":"https://maialab.org/agvgd/reference/res_to_poi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a residue position to an alignment position — res_to_poi","text":"alignment alignment. res residue position.","code":""},{"path":"https://maialab.org/agvgd/reference/res_to_poi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a residue position to an alignment position — res_to_poi","text":"integer vector alignment positions corresponding residue position reference   sequence.","code":""},{"path":"https://maialab.org/agvgd/reference/res_to_poi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a residue position to an alignment position — res_to_poi","text":"","code":"align_ATM <- read_alignment('ATM') align_ATM[, 1:6] #> Hsap_ATM_AAB65827.1  1 M-SLVL #> Mmus_ATM_NP_031525.2 1 M-SLAL #> Sscr_ATM_AAT01608.1  1 M-SLAL #> Mdom_ATM_IARC        1 M-SLAL #> Ggal_ATM_edited      1 M-SLVL #> Xlae_ATM_AAT72929.1  1 M-SLAL #> Drer_ATM_IARC_v2     1 M-SLAL #> Bflo_ATM_IARC        1 MTDLLT #> Spur_ATM_ABY60856.1  1 MAEVLI  # Convert the positions of the first five residues to alignment positions res_to_poi(align_ATM, 1:5) #> [1] 1 3 4 5 6"},{"path":"https://maialab.org/agvgd/reference/str_chop.html","id":null,"dir":"Reference","previous_headings":"","what":"Chop a string into sub-strings of fixed width — str_chop","title":"Chop a string into sub-strings of fixed width — str_chop","text":"Chop string sub-strings fixed width","code":""},{"path":"https://maialab.org/agvgd/reference/str_chop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chop a string into sub-strings of fixed width — str_chop","text":"","code":"str_chop(x, width = 50)"},{"path":"https://maialab.org/agvgd/reference/str_chop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chop a string into sub-strings of fixed width — str_chop","text":"x single string. function vectorised, x must length 1. width Length chopped pieces.","code":""},{"path":"https://maialab.org/agvgd/reference/str_chop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chop a string into sub-strings of fixed width — str_chop","text":"character vector sub-strings length width.","code":""},{"path":"https://maialab.org/agvgd/reference/write_alignment.html","id":null,"dir":"Reference","previous_headings":"","what":"Export an alignment to FASTA — write_alignment","title":"Export an alignment to FASTA — write_alignment","text":"function takes alignment exports FASTA file.","code":""},{"path":"https://maialab.org/agvgd/reference/write_alignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export an alignment to FASTA — write_alignment","text":"","code":"write_alignment(alignment, file)"},{"path":"https://maialab.org/agvgd/reference/write_alignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export an alignment to FASTA — write_alignment","text":"alignment alignment. may simple matrix object obtained read_alignment(). file file path.","code":""},{"path":"https://maialab.org/agvgd/reference/write_alignment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export an alignment to FASTA — write_alignment","text":"function run side effect writing file. returns file path passed file.","code":""},{"path":"https://maialab.org/agvgd/reference/write_alignment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export an alignment to FASTA — write_alignment","text":"","code":"# \\dontshow{ .old_wd <- setwd(tempdir()) # } alignment <- matrix(   c('P', 'M', 'I',     'P', 'I', 'I',     'P', 'L', 'I'),   nrow = 3,   byrow = TRUE )  # Export an alignment based on a matrix write_alignment(alignment, \"my_alignment.fasta\") #> [1] \"my_alignment.fasta\" cat(readLines(\"my_alignment.fasta\"), sep = \"\\n\") #> >seq_01 #> PMI #> >seq_02 #> PII #> >seq_03 #> PLI  # Export one of the bundled alignments write_alignment(read_alignment(gene = 'BRCA1'), \"BRCA1.fasta\") #> [1] \"BRCA1.fasta\" cat(readLines(\"BRCA1.fasta\")[1:10], sep = \"\\n\") #> >B1_Hsap_NP_009225 #> MDLSALRVEEVQNVINAMQKILECPICLELIKEPVSTKCDHIFCKFCMLK #> LLN-QKKGPSQCPLCKNDITKRSLQESTRFSQLVEELLKIICAFQLDTGL #> EYANSYNFAKKENN--SPEHL--KDEVSIIQSMGYRNRAKRLLQSEP--E #> NPSLQETSLSVQLSNLGTV-RTLRTKQRIQPQKTS--VYIELGSDSSE-D #> TVNKATYCSVGDQELLQITPQGTRDEISLDS------AKKAACEFSETDV #> TNTEHHQPSNNDLNTTEKRAAERHPEKYQGSSVSNLHVEP--CGTNT--- #> HASSLQHENSSLLLTKDRMNVEKAEFCNKSKQPGLARSQHNRWAGSKETC #> NDRRTPSTE--KKVDLNADPLCERKEWNKQKL-PCSENPRDTEDVPWIT- #> -LNSSIQKVNEWFSRSDELLGSDDSHDGESESNAKVADVLDVLNEVDEYS  # \\dontshow{ setwd(.old_wd) # }"},{"path":"https://maialab.org/agvgd/reference/write_substitutions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate and export a list of substitutions — write_substitutions","title":"Generate and export a list of substitutions — write_substitutions","text":"function exports file list residue substitutions. format used  one requested web version Align-GVGD.","code":""},{"path":"https://maialab.org/agvgd/reference/write_substitutions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate and export a list of substitutions — write_substitutions","text":"","code":"write_substitutions(   file,   alignment,   poi,   sub,   mode = c(\"recycle\", \"expand_grid\") )"},{"path":"https://maialab.org/agvgd/reference/write_substitutions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate and export a list of substitutions — write_substitutions","text":"file file path. alignment character matrix alignment object obtained read_alignment(). Rows expected sequences single characters (protein residues), columns alignment positions. first row must reference sequence, .e. sequence whose substitutions evaluated . poi whole number indicating position interest (POI). sub character vector protein residue substitutions classified. amino acids must provided one-letter symbols. mode poi sub contain one element, mode specifies two inputs combined. mode = 'recycle' shortest vector recycled match length longest. mode = 'expand_grid', combinations elements poi sub combined.","code":""},{"path":"https://maialab.org/agvgd/reference/write_substitutions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate and export a list of substitutions — write_substitutions","text":"function run side effect writing file. returns file path passed file.","code":""},{"path":"https://maialab.org/agvgd/reference/write_substitutions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate and export a list of substitutions — write_substitutions","text":"","code":"# \\dontshow{ .old_wd <- setwd(tempdir()) # } write_substitutions(file = \"ex01.csv\",                     alignment = read_alignment(\"ATM\"),                     poi = 20:25,                     sub = amino_acids()) #> [1] \"ex01.csv\" cat(readLines(\"ex01.csv\"), sep = \"\\n\") #> R19S #> A20R #> T21L #> E22P #> R23T #> K24A #> R19V #> A20G #> T21I #> E22F #> R23Y #> K24C #> R19H #> A20Q #> T21N #> E22K #> R23D #> K24E #> R19M #> A20W  write_substitutions(file = \"ex02.csv\",                     alignment = read_alignment(\"ATM\"),                     poi = 20:21,                     sub = amino_acids(),                     mode = 'expand_grid') #> [1] \"ex02.csv\" cat(readLines(\"ex02.csv\"), sep = \"\\n\") #> R19S #> R19R #> R19L #> R19P #> R19T #> R19A #> R19V #> R19G #> R19I #> R19F #> R19Y #> R19C #> R19H #> R19Q #> R19N #> R19K #> R19D #> R19E #> R19M #> R19W #> A20S #> A20R #> A20L #> A20P #> A20T #> A20A #> A20V #> A20G #> A20I #> A20F #> A20Y #> A20C #> A20H #> A20Q #> A20N #> A20K #> A20D #> A20E #> A20M #> A20W # \\dontshow{ setwd(.old_wd) # }"},{"path":"https://maialab.org/agvgd/news/index.html","id":"agvgd-012","dir":"Changelog","previous_headings":"","what":"agvgd 0.1.2","title":"agvgd 0.1.2","text":"Fixed bug read_substitutions() parse positions correctly. Added new substitutions example file lee2010_sub.txt. Added new function read_agvgdweb_results() aimed developers.","code":""},{"path":"https://maialab.org/agvgd/news/index.html","id":"agvgd-011","dir":"Changelog","previous_headings":"","what":"agvgd 0.1.1","title":"agvgd 0.1.1","text":"CRAN release: 2022-02-03 main function agvgd() alias, align_agvgd(), now removed avoid confusion. functions now exported allowing access low-level routines: gd(), gv() cpv_ranges(). alignment_pos_to_residue_pos() renamed poi_to_res() residue_pos_to_alignment_pos() res_to_poi(). Code coverage now tracked. Added NEWS.md file track changes package.","code":""},{"path":"https://maialab.org/agvgd/news/index.html","id":"agvgd-010","dir":"Changelog","previous_headings":"","what":"agvgd 0.1.0","title":"agvgd 0.1.0","text":"CRAN release: 2022-01-17 First version agvgd.","code":""}]
