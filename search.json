[{"path":"https://maialab.org/agvgd/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Ramiro Magno Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://maialab.org/agvgd/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ramiro Magno. Author, maintainer. Isabel Duarte. Author. Ana-Teresa Maia. Author. . Copyright holder, funder.","code":""},{"path":"https://maialab.org/agvgd/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Magno R, Duarte , Maia (2022). agvgd: R Implementation 'Align-GVGD' Method. R package version 0.1.0, https://maialab.org/agvgd/.","code":"@Manual{,   title = {agvgd: An R Implementation of the 'Align-GVGD' Method},   author = {Ramiro Magno and Isabel Duarte and Ana-Teresa Maia},   year = {2022},   note = {R package version 0.1.0},   url = {https://maialab.org/agvgd/}, }"},{"path":"https://maialab.org/agvgd/index.html","id":"agvgd-","dir":"","previous_headings":"","what":"An R Implementation of the Align-GVGD Method","title":"An R Implementation of the Align-GVGD Method","text":"R package agvgd provides R implementation Align-GVGD1,2,3 (-GVGD) method. -GVGD combines multiple sequence alignment orthologous sequences Grantham distance4 classify missense variants, .e. distinguish human disease susceptibility missense changes changes little clinical significance.","code":""},{"path":"https://maialab.org/agvgd/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Implementation of the Align-GVGD Method","text":"Install agvgd CRAN: can install development version agvgd like :","code":"install.packages(\"agvgd\") # install.packages(\"remotes\") remotes::install_github(\"maialab/agvgd\")"},{"path":"https://maialab.org/agvgd/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"An R Implementation of the Align-GVGD Method","text":"minimal example using dummy alignment constructed R matrix: another simple example using one bundled alignments. one alignment gene ATM. Let’s say interested position 16 alignment, like know impact possible missense substitutions:","code":"library(agvgd)  # The alignment can be provided as a simple matrix: alignment <- matrix(   c('P', 'M', 'I',     'P', 'I', 'I',     'P', 'L', 'I'),   nrow = 3,   byrow = TRUE )  # In this example we will interrogate changes to the second position in the # alignment, i.e., changes to Methionine (M); therefore we set the position of # interest (poi) to 2. poi <- 2  # Here's a set of three possible missense changes (substitutions): Isoleucine # (Ile, I), Leucine (Leu, L), and Tryptophan (Trp, W): substitutions <- c('I', 'L', 'W')  # agvgd package's main function is `agvgd()` :) agvgd(alignment = alignment, poi = poi, substitutions) #> # A tibble: 3 × 7 #>     res   poi ref   sub      gv    gd prediction #>   <int> <dbl> <chr> <chr> <dbl> <dbl> <chr>      #> 1     2     2 Met   Ile    14.3   0   C0         #> 2     2     2 Met   Leu    14.3   0   C0         #> 3     2     2 Met   Trp    14.3  60.4 C35 # `read_alignment()` either reads in one of the bundled alignments with # `{agvgd}` by gene name or directly from a FASTA file. alignment <- read_alignment(gene = 'ATM')  # For the sake of illustration, let us define a new alignment based on a narrow # region of the original alignment by focusing only on the first 30 positions. # Note: rows are protein sequences; columns are alignment positions. narrow_alignment <- alignment[, 1:30]  # poi: position of interest poi <- 16  # Print the alignment to the console and highlight the position of interest # (POI). NB: The POI is not highlighted in GitHub's README but it is on the R # console. print(narrow_alignment, poi = poi) #> Hsap_ATM_AAB65827.1  1 M-SLVLNDLLICCRQLEHDRATERKKEVEK #> Mmus_ATM_NP_031525.2 1 M-SLALNDLLICCRQLEHDRATERRKEVDK #> Sscr_ATM_AAT01608.1  1 M-SLALNDLLICCRQLEHDRATERRKAVEN #> Mdom_ATM_IARC        1 M-SLALNDLLLCCRQLENDRATERRKEVEK #> Ggal_ATM_edited      1 M-SLVLHDLLTCCRRLENERATERRNEIEN #> Xlae_ATM_AAT72929.1  1 M-SLALHELLLCCRQIETDKATERKKEIVK #> Drer_ATM_IARC_v2     1 M-SLALHELLVCCRGLENEKATERKKEVDR #> Bflo_ATM_IARC        1 MTDLLTHDLRDCCCHLESDKVTERKKNAEK #> Spur_ATM_ABY60856.1  1 MAEVLIP-LRTACGYLGSDKITERKKQIDI  # You may use `amino_acids()` to get a vector of all the 20 standard amino acids # and hence easily get a vector of all possible substitutions: all_substitutions <- amino_acids()  agvgd(alignment = narrow_alignment, poi = poi, all_substitutions) #> # A tibble: 20 × 7 #>      res   poi ref   sub      gv    gd prediction #>    <int> <dbl> <chr> <chr> <dbl> <dbl> <chr>      #>  1    15    16 Leu   Ser    4.86 142.  C65        #>  2    15    16 Leu   Arg    4.86  97.6 C65        #>  3    15    16 Leu   Leu    4.86   0   C0         #>  4    15    16 Leu   Pro    4.86  95.4 C65        #>  5    15    16 Leu   Thr    4.86  89.3 C65        #>  6    15    16 Leu   Ala    4.86  93.7 C65        #>  7    15    16 Leu   Val    4.86  29.6 C15        #>  8    15    16 Leu   Gly    4.86 135.  C65        #>  9    15    16 Leu   Ile    4.86   0   C0         #> 10    15    16 Leu   Phe    4.86  21.3 C0         #> 11    15    16 Leu   Tyr    4.86  33.0 C25        #> 12    15    16 Leu   Cys    4.86 197.  C65        #> 13    15    16 Leu   His    4.86  94.3 C65        #> 14    15    16 Leu   Gln    4.86 109.  C65        #> 15    15    16 Leu   Asn    4.86 149.  C65        #> 16    15    16 Leu   Lys    4.86 102.  C65        #> 17    15    16 Leu   Asp    4.86 168.  C65        #> 18    15    16 Leu   Glu    4.86 134.  C65        #> 19    15    16 Leu   Met    4.86  10.1 C0         #> 20    15    16 Leu   Trp    4.86  60.5 C55"},{"path":"https://maialab.org/agvgd/index.html","id":"logo","dir":"","previous_headings":"","what":"Logo","title":"An R Implementation of the Align-GVGD Method","text":"agvgd logo, agvgd.png, derivative work illustration “Globin Evolution” David S. Goodsell RCSB PDB, used CC--4.0. agvgd.png licensed CC--4.0 Ramiro Magno.","code":""},{"path":"https://maialab.org/agvgd/index.html","id":"related-software","dir":"","previous_headings":"","what":"Related software","title":"An R Implementation of the Align-GVGD Method","text":"Align-GVGD (-GVGD) Sean Tavtigian, provided web service hosted Huntsman Cancer Institute http://agvgd.hci.utah.edu/. Multivariate Analysis Protein Polymorphism (MAPP)5 Eric Stone ideas -GVGD sophisticated framework. used provided Java standalone application: https://biology.anu.edu.au/research/groups/stone-group-quantitative--computational-biology/software; however, download link MAPP long . grantham package.","code":""},{"path":"https://maialab.org/agvgd/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"An R Implementation of the Align-GVGD Method","text":"work package benefited greatly feedback Professor Sean Tavtigian, Dr. Russell Bell.","code":""},{"path":"https://maialab.org/agvgd/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"An R Implementation of the Align-GVGD Method","text":"1. Tavtigian, S.V., Deffenbaugh, . M., Yin, L., Judkins, T., Scholl, T., Samollow, P.B., de Silva, D., Zharkikh, ., Thomas, . Comprehensive statistical study 452 BRCA1 missense substitutions classification eight recurrent substitutions neutral. Journal Medical Genetics 43, 295–305 (2006). doi: 10.1136/jmg.2005.033878. 2. Mathe, E., Olivier, M., Kato, S., Ishioka, C., Hainaut, P., Tavtigian, S.V. Computational approaches predicting biological effect p53 missense mutations: comparison three sequence analysis based methods. Nucleic Acids Research 34, 1317–1325 (2006). doi: 10.1093/nar/gkj518. 3. Tavtigian, S.V., Byrnes, G. B, Goldgar, D. E., Thomas, . Classification rare missense substitutions, using risk surfaces, genetic- molecular-epidemiology applications. Human Mutation 29, 1342–1354. doi: 10.1002/humu.20896 3. Grantham, R. Amino acid difference formula help explain protein evolution. Science 185, 862–864 (1974). doi: 10.1126/science.185.4154.862. 4. Stone, E. ., Sidow, Arend. Physicochemical constraint violation missense substitutions mediates impairment protein function disease severity. Genome Research 15, 978–986 (2005). doi: 10.1101/gr.3804205.","code":""},{"path":"https://maialab.org/agvgd/reference/agvgd-package.html","id":null,"dir":"Reference","previous_headings":"","what":"agvgd: An R Implementation of the 'Align-GVGD' Method — agvgd-package","title":"agvgd: An R Implementation of the 'Align-GVGD' Method — agvgd-package","text":"'Align-GVGD' ('-GVGD') method predict impact 'missense' substitutions based properties amino acid side chains protein multiple sequence alignments <doi:10.1136/jmg.2005.033878>. '-GVGD' extension original 'Grantham' distance multiple sequence alignments. package provides alternative R implementation web version found <http://agvgd.hci.utah.edu/>.","code":""},{"path":[]},{"path":"https://maialab.org/agvgd/reference/agvgd-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"agvgd: An R Implementation of the 'Align-GVGD' Method — agvgd-package","text":"Maintainer: Ramiro Magno ramiro.magno@gmail.com (ORCID) Authors: Isabel Duarte iduarte.scientist@gmail.com (ORCID) Ana-Teresa Maia maia.anateresa@gmail.com (ORCID) contributors: CINTESIS [copyright holder, funder]","code":""},{"path":"https://maialab.org/agvgd/reference/agvgd.html","id":null,"dir":"Reference","previous_headings":"","what":"Align-GVGD (A-GVGD) — agvgd","title":"Align-GVGD (A-GVGD) — agvgd","text":"function implements Align-GVGD (-GVGD) method described Tavtigian et al. (2006). -GVGD combines multiple sequence alignment orthologous sequences Grantham distance classify missense variants, .e. distinguish human disease susceptibility missense changes changes little clinical significance. agvgd() align_gvgd() synonyms.","code":""},{"path":"https://maialab.org/agvgd/reference/agvgd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align-GVGD (A-GVGD) — agvgd","text":"","code":"agvgd(alignment, poi, substitution, sort = FALSE)  align_gvgd(alignment, poi, substitution, sort = FALSE)"},{"path":"https://maialab.org/agvgd/reference/agvgd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align-GVGD (A-GVGD) — agvgd","text":"alignment character matrix alignment object obtained read_alignment(). Rows expected sequences single characters (protein residues), columns alignment positions. first row must reference sequence, .e. sequence whose substitutions evaluated . poi whole number indicating position interest (POI). substitution character vector protein residue substitutions classified. amino acids must provided one-letter symbols. sort Whether sort output gd, . Default FALSE.","code":""},{"path":"https://maialab.org/agvgd/reference/agvgd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Align-GVGD (A-GVGD) — agvgd","text":"Tavtigian, S.V., Deffenbaugh, . M., Yin, L., Judkins, T., Scholl, T., Samollow, P.B., de Silva, D., Zharkikh, ., Thomas, . Comprehensive statistical study 452 BRCA1 missense substitutions classification eight recurrent substitutions neutral. Journal Medical Genetics 43, 295--305 (2006). doi: 10.1136/jmg.2005.033878 . Mathe, E., Olivier, M., Kato, S., Ishioka, C., Hainaut, P., Tavtigian, S.V. Computational approaches predicting biological effect p53 missense mutations: comparison three sequence analysis based methods. Nucleic Acids Research 34, 1317--1325 (2006). doi: 10.1093/nar/gkj518 .","code":""},{"path":"https://maialab.org/agvgd/reference/alignment_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-bundled alignments — alignment_file","title":"Pre-bundled alignments — alignment_file","text":"function returns either data frame pre-bundled alignments parameter gene missing (default behaviour), file name alignment supplied gene name.","code":""},{"path":"https://maialab.org/agvgd/reference/alignment_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-bundled alignments — alignment_file","text":"","code":"alignment_file(gene)"},{"path":"https://maialab.org/agvgd/reference/alignment_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-bundled alignments — alignment_file","text":"gene gene name one pre-bundled alignments. Run alignment_file() list genes available.","code":""},{"path":"https://maialab.org/agvgd/reference/alignment_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-bundled alignments — alignment_file","text":"Either data frame pre-bundled alignments parameter geneis missing (default behaviour), file name alignment supplied gene name.","code":""},{"path":"https://maialab.org/agvgd/reference/alignment_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pre-bundled alignments — alignment_file","text":"","code":"# List pre-bundled alignment file names and associated genes alignment_file() #> # A tibble: 12 × 2 #>    gene   file                       #>    <chr>  <chr>                      #>  1 ATM    ATM4_Spur.fasta            #>  2 BRCA1  BRCA1_Align_Pufferfish.txt #>  3 BRCA2  BRCA2_Puff.fasta           #>  4 CHECK2 CHEK2_June_2010.fasta      #>  5 MRE11  MRE11_all.fa               #>  6 MSH6   MSH6_Align_2010a.fa        #>  7 NBN    NBN_all.fa                 #>  8 PALB2  PALB2.fa                   #>  9 PMS2   PMS2_Align_2010a.fa        #> 10 RAD50  RAD50_all.fa               #> 11 RAD51  RAD51.fa                   #> 12 XRCC2  XRCC2_Tadh.fa               # Retrieve the file name of an alignment alignment_file(\"BRCA1\") #> [1] \"BRCA1_Align_Pufferfish.txt\"  # You may get the full path to an alignment file with `system.file()` system.file(\"extdata\", alignment_file(\"BRCA1\"), package = \"agvgd\") #> [1] \"/home/runner/work/_temp/Library/agvgd/extdata/BRCA1_Align_Pufferfish.txt\""},{"path":"https://maialab.org/agvgd/reference/alignment_pos_to_residue_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an alignment position to residue position — alignment_pos_to_residue_pos","title":"Convert an alignment position to residue position — alignment_pos_to_residue_pos","text":"function converts alignment position position frame reference protein sequence, .e., positions residues first sequence alignment.","code":""},{"path":"https://maialab.org/agvgd/reference/alignment_pos_to_residue_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an alignment position to residue position — alignment_pos_to_residue_pos","text":"","code":"alignment_pos_to_residue_pos(alignment, alignment_pos)"},{"path":"https://maialab.org/agvgd/reference/alignment_pos_to_residue_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an alignment position to residue position — alignment_pos_to_residue_pos","text":"alignment alignment. alignment_pos alignment position.","code":""},{"path":"https://maialab.org/agvgd/reference/alignment_pos_to_residue_pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an alignment position to residue position — alignment_pos_to_residue_pos","text":"integer vector positions residues reference   sequence.","code":""},{"path":"https://maialab.org/agvgd/reference/amino_acids.html","id":null,"dir":"Reference","previous_headings":"","what":"The 20 standard amino acids — amino_acids","title":"The 20 standard amino acids — amino_acids","text":"20 amino acids encoded directly codons universal genetic code.","code":""},{"path":"https://maialab.org/agvgd/reference/amino_acids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The 20 standard amino acids — amino_acids","text":"","code":"amino_acids(code = c(\"one_letter\", \"three_letter\"))"},{"path":"https://maialab.org/agvgd/reference/amino_acids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The 20 standard amino acids — amino_acids","text":"code type amino acid symbol returned, one-letter (`one_letter`) three-letter (`three_letter`) codes.","code":""},{"path":"https://maialab.org/agvgd/reference/amino_acids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The 20 standard amino acids — amino_acids","text":"character vector 20 standard amino acids.","code":""},{"path":"https://maialab.org/agvgd/reference/amino_acids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The 20 standard amino acids — amino_acids","text":"","code":"# By default `amino_acids` returns one-letter symbols amino_acids() #>  [1] \"S\" \"R\" \"L\" \"P\" \"T\" \"A\" \"V\" \"G\" \"I\" \"F\" \"Y\" \"C\" \"H\" \"Q\" \"N\" \"K\" \"D\" \"E\" \"M\" #> [20] \"W\"  # Use code = 'three_letter' instead for three-letter symbols amino_acids(code = 'three_letter') #>  [1] \"Ser\" \"Arg\" \"Leu\" \"Pro\" \"Thr\" \"Ala\" \"Val\" \"Gly\" \"Ile\" \"Phe\" \"Tyr\" \"Cys\" #> [13] \"His\" \"Gln\" \"Asn\" \"Lys\" \"Asp\" \"Glu\" \"Met\" \"Trp\""},{"path":"https://maialab.org/agvgd/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://maialab.org/agvgd/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://maialab.org/agvgd/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://maialab.org/agvgd/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://maialab.org/agvgd/reference/read_alignment.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a protein sequence multiple alignment — read_alignment","title":"Read a protein sequence multiple alignment — read_alignment","text":"Reads protein sequence multiple alignment (PSMA) either set pre-bundled alignments, gene name, Multi-FASTA file.","code":""},{"path":"https://maialab.org/agvgd/reference/read_alignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a protein sequence multiple alignment — read_alignment","text":"","code":"read_alignment(   gene = c(\"ATM\", \"BRCA1\", \"BRCA2\", \"CHEK2\", \"MRE11\", \"MSH6\", \"NBN\", \"PALB2\", \"PMS2\",     \"RAD50\", \"RAD51\", \"XRCC2\"),   file = NULL )"},{"path":"https://maialab.org/agvgd/reference/read_alignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a protein sequence multiple alignment — read_alignment","text":"gene gene name alignment provided package. Use function alignment_file() list pre-bundled alignments. file path Multi-FASTA file. argument given, takes precedence gene parameter.","code":""},{"path":"https://maialab.org/agvgd/reference/read_alignment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a protein sequence multiple alignment — read_alignment","text":"alignment object; essentially, character matrix, whose elements protein residues one-letter notation. Rows sequences columns alignment positions.","code":""},{"path":"https://maialab.org/agvgd/reference/read_alignment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a protein sequence multiple alignment — read_alignment","text":"","code":"# Read in the alignment for the gene XRCC2 read_alignment('XRCC2') #> Hsap_XRCC2   1 MCSAFHRAESGTELLARLEGRSSLKEIEPNLFADEDS--PVHGDILEFHG #> Mmul_XRCC2   1 MCSDFHRAESGTELLARLEGRSSLKEIEPNLFADEDS--PVHGDILEFHG #> Mmus_XRCC2   1 MCSDFRRAESGTELLARLEGRSSLKELEPNLFADEDS--PVHGDIFEFHG #> Cfam_XRCC2   1 MCSDFHRAESGTELLARLEGRSSLKEIEPYLFTDEVS--SVHGDILEFHG #> Lafr_XRCC2   1 MCSDFHRAESGTELLARLEGRSSLKVIEPYLFADEES--PVHGDILEFHG #> Mdom_XRCC2   1 MSGDFRRAESGTELLARLEGRSSLKDIEPFLFADEGS--PIHGDILEFHG #> Oana_XRCC2   1 MSGHFRRAESGTELLARLEGRSSLKTLEPFLFADEGF--PIHGDILEFHG #> Ggal_XRCC2   1 MGDAFRRAESGTQLLARLEGRSSLKNLEPNLFAEEGS--PVHGDVIEFHG #> Acar_XRCC2   1 MTGRFGEAESGAQLLARLEGRGSLKDLEPCLFAEEGY--PIPGDIIECYG #> Xtro_XRCC2   1 MSDGSRQAESGTQLLARLEGRASLSNLEPLLFADEGC--PVHGEITEFYG #> Drer_XRCC2   1 MTARVRMAENGAQLVSRLEGRQSLKDIEPNIFPADGG--PGQGDVVEFHG #> Bflo_XRCC2   1 MXXXXXXXXXXXXLLARLGSRPSLVQLETALFRADMG--PKSGDAIELYG #> Spur_XRCC2   1 MXXXXXXXXXXXXLFARLGEKPSLARLNPKLIPPGLE--PRPGDVVEIYG #> Nvec_XRCC2   1 MXXXXXXXXXXXKLFSRLGSKQSLDGLDKKLFVDIPD-GIKAGDVVEFYG #> Tadh_XRCC2   1 M-----ASESAAKLFARLGSRQTVIGMEDRLFSKLQFNGLTCGDVVEFYG  #>  #> Hsap_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLEVEVLFIDTDYHFDMLRLV #> Mmul_XRCC2  51 SEGTGKTEMLYHLTARCILPKS-----EGGLEVEVLFIDTDYHFDMLRLV #> Mmus_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLQIEVLFIDTDYHFDMLRLV #> Cfam_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLEVEVLFIDTDYHFDMLRLV #> Lafr_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLEIEVLFIDTDHHFDMLRLV #> Mdom_XRCC2  51 PEGTGKTEMLYHLTARCILPKS-----EGGLEVEVLFIDTDYHFDMLRLV #> Oana_XRCC2  51 QEGTGKTEMLYHLVARCILPRS-----EGGLEEEVLFVDTDYHFDMLRLI #> Ggal_XRCC2  51 PEGTGKTEMLYHLIARCIIPKS-----GGGLEVEVMFIDTDYHFDMLRLV #> Acar_XRCC2  51 PEGTGKTEMFYHLIARCILPKS-----RGGLEVGLLFIDTDFHFDMLRLV #> Xtro_XRCC2  51 PEGTGKTEMLCHLISRCILPKS-----DGGLQVEVIYIDTDYHFDMLRLV #> Drer_XRCC2  51 MEGSGKTETLYHLITRCITPTH-----SGGLEVGVVFIDTDYHFDMLRFV #> Bflo_XRCC2  51 PEGTAKTEMLLHLTARCILPAS-----VGGLEAGVVFIDNDYHFDILRLV #> Spur_XRCC2  51 NSGSGKTELLLNLAAMCILPERWKTIDIGGLGTSVVFIDTDHQFSMLRLF #> Nvec_XRCC2  51 KEGCGKTEMLLHLAANCIMPRSWHELYLGGKGVSVIFIDTDYHFQILRLI #> Tadh_XRCC2  51 SEGCGKTEMLLHLMIKCIMPDNFRGIAMNGRSMSVVYIDCDYHFNLLRLM  #>  #> Hsap_XRCC2 101 TILEHRL------SQSS--------EEIIKYCLGRFFLVYCSSSTHLLLT #> Mmul_XRCC2 101 TVLEHRL------SQSS--------EEIIKYCLGRFFLVYCSSSTHLLLT #> Mmus_XRCC2 101 TVLEHRL------SQSS--------EEAMKLCLARLFLAYCSSSMQLLLT #> Cfam_XRCC2 101 TILEHRL------SQSS--------EEMVKHCLGRLFLVNCNSSTQLLLT #> Lafr_XRCC2 101 TILEHRL------SQSS--------EEIIKSCLGRFFLVYCSSSSQLLLT #> Mdom_XRCC2 101 TILERRL------SQST--------EDIIKHCLGRFFLVNCSSSNQLLIT #> Oana_XRCC2 101 TILEHRL------SQSS--------EEAIKLCLGRLFLVYCSSSVQLLLT #> Ggal_XRCC2 101 TILEHRL------EQST--------EEMMKRCLGRLFLVNCNSSTQLLLT #> Acar_XRCC2 101 TILEHRS------SQGT--------EDMIKQCLGRFFLVNCSSSSQLLLT #> Xtro_XRCC2 101 TILEHRL------AQNT--------EEAVKQCLGRFFLLYCNSSVQLLLT #> Drer_XRCC2 101 SILEGRL------AEDSKTGSENEAEETVRSCLCRLSVVHCNSSVQLLLT #> Bflo_XRCC2 101 TVLEGRL------DTTD--------EDRMKQCLGRLYIVRCNSSEQLVIT #> Spur_XRCC2 101 ALLERKV------AEAIDNRTKRK-ETFLKACLKKLYMVKIATSNQLVIT #> Nvec_XRCC2 101 AIMEYRT------AESE---------TLIKQCLTRLFIVRCNSSVELLAT #> Tadh_XRCC2 101 SILEQRYCKACQGSNATMVKHS---EEFIRKCLERFYIIRCDTIHQLITS  #>  #> Hsap_XRCC2 151 LYSLESMFCSHPSLCLLILDSLSAFYWIDRVNGGESVNLQESTLRKCSQC #> Mmul_XRCC2 151 LYSLESMFCSHPSLCLLILDSLSAFYWIDRVNGGESVNLQESTLRKCSQC #> Mmus_XRCC2 151 LHSLEALLCSRPSLCLLIVDSLSSFYWIDRVSGGESVALQESTLQKCSQL #> Cfam_XRCC2 151 LYSLETVVCSHPSLCLLILDSLSAFYWIDRVNGGESVNLQEATLKKCAQF #> Lafr_XRCC2 151 LYSLESMFCSHPSLCLLILDSLSAFYWIDRANGGESVNLQESTLKKCSQF #> Mdom_XRCC2 151 LYSLETMFCSHPSLCLFILDSLSAFYWIDRVNGGESLTLQEINLKKCSKF #> Oana_XRCC2 151 LHSLETMFCSRPSLSLLMVDSLSAFYWIDRANGGESLTQQEATLRKCTRL #> Ggal_XRCC2 151 LYSLENMFCTHPSLCLLILDSISAFYWIDRSNGGESLNSQEMNLKKCANF #> Acar_XRCC2 151 LYSLENMFCSHPSLCLLIIDSISAFYWIDRVNGGESISLQEANLRRCAQF #> Xtro_XRCC2 151 LYSLENMFCSHPSLCLLIIDSISAFYWIDRNNGGETFAKQETNLRKCTEL #> Drer_XRCC2 151 LHYLENTFSSQPTLGLLVIDSISAFYWTDRFNGGESASCQEANLRKCAEL #> Bflo_XRCC2 151 LHSLEHIIASSSEVALLIVDSISAFYWLDR-STDDSMSGQELNQRRCVDI #> Spur_XRCC2 151 LHSLESLLASQCDISVLMMDSVSAFYWVDRMKGDG-AHRQGVNQKLAFGA #> Nvec_XRCC2 151 LLSMEQLIICKPEICVMMIDSLSAFYWVDRSSGGESLQDQQENIRKTTSV #> Tadh_XRCC2 151 LHLLEYSISSNPDIGIMLIDGIGSFYWQDKFSSSS-----GVDQ--LCKI  #>  #> Hsap_XRCC2 201 LEKLVNDYRLVLFATTQTIMQKAS------------SSSEEPSHASRRLC #> Mmul_XRCC2 201 LEKLVNDYRLVLFATTQTIMQKAL------------NSSEEPSPASRRLR #> Mmus_XRCC2 201 LERLVTEYRLLLFATTQSLMQKGS------------DSADGPSSS-KHPC #> Cfam_XRCC2 201 LEKLVNEYRLVLFATTQSIMQKTS------------NWTEGPSSAFNHPK #> Lafr_XRCC2 201 LERLVNEYRLILFASTQSIMQKPS------------NSTEGPSSAFKQPS #> Mdom_XRCC2 201 LEKLVKEYHLVLFATTQTIMQKNS------------NSTERSSSL-KLPC #> Oana_XRCC2 201 LEKLVKEYHLVLLATTQAIMQRSS------------KASENSASA----W #> Ggal_XRCC2 201 LEKLVREHHLVLFATTQSIMQKST------------NSAEGF-FPLKLQS #> Acar_XRCC2 201 LEKLVREHHLVLFATTQAIMQKSL------------NAIE---SSRKRNS #> Xtro_XRCC2 201 LHKLLKEYQLVLFASTQAIMQKSP------------NEAGEGPSRSGKQN #> Drer_XRCC2 201 LDRLRRNYGIVIFATTHAIMRNFGSDLG--VS-DVHGSSSSSSSRRWRSA #> Bflo_XRCC2 201 LSRYLSDYGIVLIATKQALFGHKSRKNQ--NE-D-----TTLSPKLEKTK #> Spur_XRCC2 201 LSRLVEDYHLVLFASKAALVTKQPQN-EFSLRLDSTGETDHSNRTSTTSV #> Nvec_XRCC2 201 LSRFSRENHLVIFTTVHAIFG---NN----TK----------E--M---- #> Tadh_XRCC2 201 VKYLCDEHNLIVLATKSAIRKQFENSRL--AN-K----SRLRNDIASNYN  #>  #> Hsap_XRCC2 251 DVDIDY-RPYLCKAWQQLVKHRMFFSKQDDS----QS-SNQFSLVSRCLK #> Mmul_XRCC2 251 DVDVDY-RPYLCKAWQQLVKHRIFFSKQDDS----QS-SNQFSLVSRCLK #> Mmus_XRCC2 251 DGDMGY-RAYLCKAWQRVVKHRVIFSRDDEA----K--SSRFSLVSRHLK #> Cfam_XRCC2 251 EADADY-RPYLCKEWQQVVKHRIFFSKQEDF----K---TQFSLVSRHLK #> Lafr_XRCC2 251 NEDIDY-RPYLCKAWQQMVKHRIFFSKQDDS----KR-NNQFSLVSRHLK #> Mdom_XRCC2 251 EVDIDY-RPYLCKSWQQMVNHRIFFSRNSES----S---NQMSVVSYHLK #> Oana_XRCC2 251 EGDGDY-RPYLCKSWQQLVNHRLFFSKQDNG----EDPKQMFSFTSCHLK #> Ggal_XRCC2 251 EIDADY-RPYLCKSWQQMVTHRIFFSKQFNS----GN-STGFTLVSCHLK #> Acar_XRCC2 251 DGDVDY-RPYLCKSWQQMITHRIFFSKQCNP----DN-TQSFSITACHIR #> Xtro_XRCC2 251 SSSMDY-KPYLCKLWQQGATHRVLFSKELRN----N--EQIYSITSCHLK #> Drer_XRCC2 251 DCASDFDRPYLCRAWQRIVTHRVLFTKSHAP----KDHKQILSTACTSIL #> Bflo_XRCC2 251 VENVEH-YEYMCHAWQNLIKYRYVFSRATKKDISIEENGKDISSFSATMI #> Spur_XRCC2 251 KLSTDH-HEFMSQEWTKLVTHRMILERHDHMTS--DGPNSSYLSVLKHKA #> Nvec_XRCC2 251 ---MRN-QDYLCKAWQQSVKYRYMFTKQTEYDGKASQFCSVYV-VQRTSP #> Tadh_XRCC2 251 STHSKH-MEYMPNVWRKLVKYRYILSKLDSELSGANSYSATYS-VVLEHP  #>  #> Hsap_XRCC2 301 SNSLKKHFFIIGESGVEFC------- #> Mmul_XRCC2 301 SNSFKKHFFIIGESGVEFC------- #> Mmus_XRCC2 301 SNSLKKHSFMVRESGVEFC------- #> Cfam_XRCC2 301 SNSLKKHTFVIGENGIEFC------- #> Lafr_XRCC2 301 SNSLKKHFFIIGESGVEFC------- #> Mdom_XRCC2 301 SNNLIKRLFSIRESGVHFC------- #> Oana_XRCC2 301 SNRFAKRFFSIGEGGVQF-------- #> Ggal_XRCC2 301 KKHVAKRSFSIAECGVQFFQ------ #> Acar_XRCC2 301 NNSVIKRSFSILENGVQF-------- #> Xtro_XRCC2 301 TRNGVKRSFRIAESGVQFL------- #> Drer_XRCC2 301 TKGVKKCSFCVVEDGIKFICDK---- #> Bflo_XRCC2 301 KPVEHKCEFTVADRGISFMGSLYNQC #> Spur_XRCC2 301 SGNMYSCQFIIDQQGIRV-------- #> Nvec_XRCC2 301 KTESKSNRFLIEEHGVVFIS------ #> Tadh_XRCC2 301 SSIESAERFIVSEEGVVFI-------"},{"path":"https://maialab.org/agvgd/reference/read_substitutions.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a file with amino acid substitutions — read_substitutions","title":"Read a file with amino acid substitutions — read_substitutions","text":"function reads file amino acid substitutions. format one requested web version Align-GVGD.","code":""},{"path":"https://maialab.org/agvgd/reference/read_substitutions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a file with amino acid substitutions — read_substitutions","text":"","code":"read_substitutions(   file = stop(\"`file` must be specified\"),   amino_acid_code = c(\"one_letter\", \"three_letter\") )"},{"path":"https://maialab.org/agvgd/reference/read_substitutions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a file with amino acid substitutions — read_substitutions","text":"file path file amino acid substitutions. amino_acid_code type symbol used amino acids returned output.","code":""},{"path":"https://maialab.org/agvgd/reference/read_substitutions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a file with amino acid substitutions — read_substitutions","text":"tibble listing amino acids substitutions.","code":""},{"path":"https://maialab.org/agvgd/reference/residue_pos_to_alignment_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a residue position to an alignment position — residue_pos_to_alignment_pos","title":"Convert a residue position to an alignment position — residue_pos_to_alignment_pos","text":"function converts residue position position frame alignment.","code":""},{"path":"https://maialab.org/agvgd/reference/residue_pos_to_alignment_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a residue position to an alignment position — residue_pos_to_alignment_pos","text":"","code":"residue_pos_to_alignment_pos(alignment, residue_pos)"},{"path":"https://maialab.org/agvgd/reference/residue_pos_to_alignment_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a residue position to an alignment position — residue_pos_to_alignment_pos","text":"alignment alignment. residue_pos residue position.","code":""},{"path":"https://maialab.org/agvgd/reference/residue_pos_to_alignment_pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a residue position to an alignment position — residue_pos_to_alignment_pos","text":"integer vector alignment positions corresponding residue position reference   sequence.","code":""}]
